{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAgent = exports.pool = void 0;\n\nconst http_1 = require(\"http\");\n\nconst https_1 = require(\"https\"); // eslint-disable-next-line node/no-deprecated-api\n\n\nconst url_1 = require(\"url\");\n\nexports.pool = new Map();\n/**\n * Returns a custom request Agent if one is found, otherwise returns undefined\n * which will result in the global http(s) Agent being used.\n * @private\n * @param {string} uri The request uri\n * @param {Options} reqOpts The request options\n * @returns {HttpAnyAgent|undefined}\n */\n\nfunction getAgent(uri, reqOpts) {\n  const isHttp = uri.startsWith('http://');\n  const proxy = reqOpts.proxy || process.env.HTTP_PROXY || process.env.http_proxy || process.env.HTTPS_PROXY || process.env.https_proxy;\n  const poolOptions = Object.assign({}, reqOpts.pool);\n\n  if (proxy) {\n    // tslint:disable-next-line variable-name\n    const Agent = isHttp ? require('http-proxy-agent') : require('https-proxy-agent');\n    const proxyOpts = { ...url_1.parse(proxy),\n      ...poolOptions\n    };\n    return new Agent(proxyOpts);\n  }\n\n  let key = isHttp ? 'http' : 'https';\n\n  if (reqOpts.forever) {\n    key += ':forever';\n\n    if (!exports.pool.has(key)) {\n      // tslint:disable-next-line variable-name\n      const Agent = isHttp ? http_1.Agent : https_1.Agent;\n      exports.pool.set(key, new Agent({ ...poolOptions,\n        keepAlive: true\n      }));\n    }\n  }\n\n  return exports.pool.get(key);\n}\n\nexports.getAgent = getAgent;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;AAiBA;;AACA,iC,CACA;;;AACA;;AAGaA,eAAO,IAAIC,GAAJ,EAAP;AAIb;;;;;;;;;AAQA,SAAgBC,QAAhB,CACEC,GADF,EAEEC,OAFF,EAEkB;AAEhB,QAAMC,MAAM,GAAGF,GAAG,CAACG,UAAJ,CAAe,SAAf,CAAf;AACA,QAAMC,KAAK,GACTH,OAAO,CAACG,KAAR,IACAC,OAAO,CAACC,GAAR,CAAYC,UADZ,IAEAF,OAAO,CAACC,GAAR,CAAYE,UAFZ,IAGAH,OAAO,CAACC,GAAR,CAAYG,WAHZ,IAIAJ,OAAO,CAACC,GAAR,CAAYI,WALd;AAOA,QAAMC,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBZ,OAAO,CAACa,IAA1B,CAApB;;AAEA,MAAIV,KAAJ,EAAW;AACT;AACA,UAAMW,KAAK,GAAGb,MAAM,GAChBc,OAAO,CAAC,kBAAD,CADS,GAEhBA,OAAO,CAAC,mBAAD,CAFX;AAIA,UAAMC,SAAS,GAAG,EAAC,GAAGC,YAAMd,KAAN,CAAJ;AAAkB,SAAGO;AAArB,KAAlB;AACA,WAAO,IAAII,KAAJ,CAAUE,SAAV,CAAP;AACD;;AAED,MAAIE,GAAG,GAAGjB,MAAM,GAAG,MAAH,GAAY,OAA5B;;AAEA,MAAID,OAAO,CAACmB,OAAZ,EAAqB;AACnBD,OAAG,IAAI,UAAP;;AAEA,QAAI,CAACtB,aAAKwB,GAAL,CAASF,GAAT,CAAL,EAAoB;AAClB;AACA,YAAMJ,KAAK,GAAGb,MAAM,GAAGoB,YAAH,GAAeC,aAAnC;AACA1B,mBAAK2B,GAAL,CAASL,GAAT,EAAc,IAAIJ,KAAJ,CAAU,EAAC,GAAGJ,WAAJ;AAAiBc,iBAAS,EAAE;AAA5B,OAAV,CAAd;AACD;AACF;;AAED,SAAO5B,aAAK6B,GAAL,CAASP,GAAT,CAAP;AACD;;AArCDtB","names":["exports","Map","getAgent","uri","reqOpts","isHttp","startsWith","proxy","process","env","HTTP_PROXY","http_proxy","HTTPS_PROXY","https_proxy","poolOptions","Object","assign","pool","Agent","require","proxyOpts","url_1","key","forever","has","http_1","https_1","set","keepAlive","get"],"sources":["../../src/agents.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}