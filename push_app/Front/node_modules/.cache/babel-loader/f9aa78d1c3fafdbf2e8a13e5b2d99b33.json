{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transcode = exports.getFieldNameOnBehavior = exports.isRequiredField = exports.isProto3OptionalField = exports.requestChangeCaseAndCleanup = exports.flattenObject = exports.match = exports.applyPattern = exports.encodeWithoutSlashes = exports.encodeWithSlashes = exports.buildQueryStringComponents = exports.deleteField = exports.deepCopy = exports.getField = void 0;\n\nconst util_1 = require(\"./util\");\n\nconst httpOptionName = '(google.api.http)';\nconst fieldBehaviorOptionName = '(google.api.field_behavior)';\nconst proto3OptionalName = 'proto3_optional'; // List of methods as defined in google/api/http.proto (see HttpRule)\n\nconst supportedHttpMethods = ['get', 'post', 'put', 'patch', 'delete'];\n\nfunction getField(request, field) {\n  const parts = field.split('.');\n  let value = request;\n\n  for (const part of parts) {\n    if (typeof value !== 'object') {\n      return undefined;\n    }\n\n    value = value[part];\n  }\n\n  if (typeof value === 'object' && !Array.isArray(value) && value !== null) {\n    return undefined;\n  }\n\n  return value;\n}\n\nexports.getField = getField;\n\nfunction deepCopy(request) {\n  if (typeof request !== 'object' || request === null) {\n    return request;\n  }\n\n  const copy = Object.assign({}, request);\n\n  for (const key in copy) {\n    if (Array.isArray(copy[key])) {\n      copy[key] = copy[key].map(deepCopy);\n    } else if (typeof copy[key] === 'object' && copy[key] !== null) {\n      copy[key] = deepCopy(copy[key]);\n    }\n  }\n\n  return copy;\n}\n\nexports.deepCopy = deepCopy;\n\nfunction deleteField(request, field) {\n  const parts = field.split('.');\n\n  while (parts.length > 1) {\n    if (typeof request !== 'object') {\n      return;\n    }\n\n    const part = parts.shift();\n    request = request[part];\n  }\n\n  const part = parts.shift();\n\n  if (typeof request !== 'object') {\n    return;\n  }\n\n  delete request[part];\n}\n\nexports.deleteField = deleteField;\n\nfunction buildQueryStringComponents(request) {\n  let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  const resultList = [];\n\n  for (const key in request) {\n    if (Array.isArray(request[key])) {\n      for (const value of request[key]) {\n        resultList.push(`${prefix}${encodeWithoutSlashes(key)}=${encodeWithoutSlashes(value.toString())}`);\n      }\n    } else if (typeof request[key] === 'object' && request[key] !== null) {\n      resultList.push(...buildQueryStringComponents(request[key], `${key}.`));\n    } else {\n      resultList.push(`${prefix}${encodeWithoutSlashes(key)}=${encodeWithoutSlashes(request[key] === null ? 'null' : request[key].toString())}`);\n    }\n  }\n\n  return resultList;\n}\n\nexports.buildQueryStringComponents = buildQueryStringComponents;\n\nfunction encodeWithSlashes(str) {\n  return str.split('').map(c => c.match(/[-_.~0-9a-zA-Z]/) ? c : encodeURIComponent(c)).join('');\n}\n\nexports.encodeWithSlashes = encodeWithSlashes;\n\nfunction encodeWithoutSlashes(str) {\n  return str.split('').map(c => c.match(/[-_.~0-9a-zA-Z/]/) ? c : encodeURIComponent(c)).join('');\n}\n\nexports.encodeWithoutSlashes = encodeWithoutSlashes;\n\nfunction escapeRegExp(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction applyPattern(pattern, fieldValue) {\n  if (!pattern || pattern === '*') {\n    return encodeWithSlashes(fieldValue);\n  }\n\n  if (!pattern.includes('*') && pattern !== fieldValue) {\n    return undefined;\n  } // since we're converting the pattern to a regex, make necessary precautions:\n\n\n  const regex = new RegExp('^' + escapeRegExp(pattern).replace(/\\\\\\*\\\\\\*/g, '(.+)').replace(/\\\\\\*/g, '([^/]+)') + '$');\n\n  if (!fieldValue.match(regex)) {\n    return undefined;\n  }\n\n  return encodeWithoutSlashes(fieldValue);\n}\n\nexports.applyPattern = applyPattern;\n\nfunction match(request, pattern) {\n  let url = pattern;\n  const matchedFields = [];\n\n  for (;;) {\n    const match = url.match(/^(.*)\\{([^}=]+)(?:=([^}]*))?\\}(.*)/);\n\n    if (!match) {\n      break;\n    }\n\n    const [, before, field, pattern, after] = match;\n    matchedFields.push(field);\n    const fieldValue = getField(request, field);\n\n    if (typeof fieldValue === 'undefined') {\n      return undefined;\n    }\n\n    const appliedPattern = applyPattern(pattern, fieldValue === null ? 'null' : fieldValue.toString());\n\n    if (typeof appliedPattern === 'undefined') {\n      return undefined;\n    }\n\n    url = before + appliedPattern + after;\n  }\n\n  return {\n    matchedFields,\n    url\n  };\n}\n\nexports.match = match;\n\nfunction flattenObject(request) {\n  const result = {};\n\n  for (const key in request) {\n    if (typeof request[key] === 'undefined') {\n      continue;\n    }\n\n    if (Array.isArray(request[key])) {\n      // According to the http.proto comments, a repeated field may only\n      // contain primitive types, so no extra recursion here.\n      result[key] = request[key];\n      continue;\n    }\n\n    if (typeof request[key] === 'object' && request[key] !== null) {\n      const nested = flattenObject(request[key]);\n\n      for (const nestedKey in nested) {\n        result[`${key}.${nestedKey}`] = nested[nestedKey];\n      }\n\n      continue;\n    }\n\n    result[key] = request[key];\n  }\n\n  return result;\n}\n\nexports.flattenObject = flattenObject;\n\nfunction requestChangeCaseAndCleanup(request, caseChangeFunc) {\n  if (!request || typeof request !== 'object') {\n    return request;\n  }\n\n  const convertedRequest = {};\n\n  for (const field in request) {\n    // cleaning up inherited properties\n    if (!Object.prototype.hasOwnProperty.call(request, field)) {\n      continue;\n    }\n\n    const convertedField = caseChangeFunc(field);\n    const value = request[field];\n\n    if (Array.isArray(value)) {\n      convertedRequest[convertedField] = value.map(v => requestChangeCaseAndCleanup(v, caseChangeFunc));\n    } else {\n      convertedRequest[convertedField] = requestChangeCaseAndCleanup(value, caseChangeFunc);\n    }\n  }\n\n  return convertedRequest;\n}\n\nexports.requestChangeCaseAndCleanup = requestChangeCaseAndCleanup;\n\nfunction isProto3OptionalField(field) {\n  return field && field.options && field.options[proto3OptionalName];\n}\n\nexports.isProto3OptionalField = isProto3OptionalField;\n\nfunction isRequiredField(field) {\n  return field && field.options && field.options[fieldBehaviorOptionName] === 'REQUIRED';\n}\n\nexports.isRequiredField = isRequiredField;\n\nfunction getFieldNameOnBehavior(fields) {\n  const requiredFields = new Set();\n  const optionalFields = new Set();\n\n  for (const fieldName in fields) {\n    const field = fields[fieldName];\n\n    if (isRequiredField(field)) {\n      requiredFields.add(fieldName);\n    }\n\n    if (isProto3OptionalField(field)) {\n      optionalFields.add(fieldName);\n    }\n  }\n\n  return {\n    requiredFields,\n    optionalFields\n  };\n}\n\nexports.getFieldNameOnBehavior = getFieldNameOnBehavior;\n\nfunction transcode(request, parsedOptions, requestFields) {\n  const {\n    requiredFields,\n    optionalFields\n  } = getFieldNameOnBehavior(requestFields); // all fields annotated as REQUIRED MUST be emitted in the body.\n\n  for (const requiredField of requiredFields) {\n    if (!(requiredField in request) || request[requiredField] === 'undefined') {\n      throw new Error(`Required field ${requiredField} is not present in the request.`);\n    }\n  } // request is supposed to have keys in camelCase.\n\n\n  const snakeRequest = requestChangeCaseAndCleanup(request, util_1.camelToSnakeCase);\n  const httpRules = [];\n\n  for (const option of parsedOptions) {\n    if (!(httpOptionName in option)) {\n      continue;\n    }\n\n    const httpRule = option[httpOptionName];\n    httpRules.push(httpRule);\n\n    if (httpRule === null || httpRule === void 0 ? void 0 : httpRule.additional_bindings) {\n      const additionalBindings = Array.isArray(httpRule.additional_bindings) ? httpRule.additional_bindings : [httpRule.additional_bindings];\n      httpRules.push(...additionalBindings);\n    }\n  }\n\n  for (const httpRule of httpRules) {\n    for (const httpMethod of supportedHttpMethods) {\n      if (!(httpMethod in httpRule)) {\n        continue;\n      }\n\n      const pathTemplate = httpRule[httpMethod];\n      const matchResult = match(snakeRequest, pathTemplate);\n\n      if (typeof matchResult === 'undefined') {\n        continue;\n      }\n\n      const {\n        url,\n        matchedFields\n      } = matchResult;\n\n      if (httpRule.body === '*') {\n        // all fields except the matched fields go to request data\n        const data = deepCopy(snakeRequest);\n\n        for (const field of matchedFields) {\n          deleteField(data, field);\n        } // Remove unset proto3 optional field from the request body.\n\n\n        for (const key in data) {\n          if (optionalFields.has(util_1.snakeToCamelCase(key)) && (!(key in snakeRequest) || snakeRequest[key] === 'undefined')) {\n            delete data[key];\n          }\n        } // HTTP endpoint expects camelCase but we have snake_case at this point\n\n\n        const camelCaseData = requestChangeCaseAndCleanup(data, util_1.snakeToCamelCase);\n        return {\n          httpMethod,\n          url,\n          queryString: '',\n          data: camelCaseData\n        };\n      } // one field possibly goes to request data, others go to query string\n\n\n      const body = httpRule.body;\n      let data = '';\n      const queryStringObject = deepCopy(request); // use camel case for query string\n\n      if (body) {\n        deleteField(queryStringObject, util_1.snakeToCamelCase(body)); // Unset optional field should not add in body request.\n\n        data = optionalFields.has(body) && snakeRequest[body] === 'undefined' ? '' : snakeRequest[body];\n      }\n\n      for (const field of matchedFields) {\n        deleteField(queryStringObject, util_1.snakeToCamelCase(field));\n      } // Unset proto3 optional field does not appear in the query params.\n\n\n      for (const key in queryStringObject) {\n        if (optionalFields.has(key) && request[key] === 'undefined') {\n          delete queryStringObject[key];\n        }\n      }\n\n      const queryStringComponents = buildQueryStringComponents(queryStringObject);\n      const queryString = queryStringComponents.join('&');\n      let camelCaseData;\n\n      if (typeof data === 'string') {\n        camelCaseData = data;\n      } else {\n        camelCaseData = requestChangeCaseAndCleanup(data, util_1.snakeToCamelCase);\n      }\n\n      return {\n        httpMethod,\n        url,\n        queryString,\n        data: camelCaseData\n      };\n    }\n  }\n\n  return undefined;\n}\n\nexports.transcode = transcode;","map":{"version":3,"mappings":"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","names":["httpOptionName","fieldBehaviorOptionName","proto3OptionalName","supportedHttpMethods","getField","request","field","parts","split","value","part","undefined","Array","isArray","exports","deepCopy","copy","Object","assign","key","map","deleteField","length","shift","buildQueryStringComponents","prefix","resultList","push","encodeWithoutSlashes","toString","encodeWithSlashes","str","c","match","encodeURIComponent","join","escapeRegExp","replace","applyPattern","pattern","fieldValue","includes","regex","RegExp","url","matchedFields","before","after","appliedPattern","flattenObject","result","nested","nestedKey","requestChangeCaseAndCleanup","caseChangeFunc","convertedRequest","prototype","hasOwnProperty","call","convertedField","v","isProto3OptionalField","options","isRequiredField","getFieldNameOnBehavior","fields","requiredFields","Set","optionalFields","fieldName","add","transcode","parsedOptions","requestFields","requiredField","Error","snakeRequest","util_1","httpRules","option","httpRule","additional_bindings","additionalBindings","httpMethod","pathTemplate","matchResult","body","data","has","camelCaseData","queryString","queryStringObject","queryStringComponents"],"sources":["../../src/transcoding.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}