{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BundleApiCaller = void 0;\n\nconst call_1 = require(\"../call\");\n\nconst googleError_1 = require(\"../googleError\");\n/**\n * An implementation of APICaller for bundled calls.\n * Uses BundleExecutor to do bundling.\n */\n\n\nclass BundleApiCaller {\n  constructor(bundler) {\n    this.bundler = bundler;\n  }\n\n  init(callback) {\n    if (callback) {\n      return new call_1.OngoingCall(callback);\n    }\n\n    return new call_1.OngoingCallPromise();\n  }\n\n  wrap(func) {\n    return func;\n  }\n\n  call(apiCall, argument, settings, status) {\n    if (!settings.isBundling) {\n      throw new googleError_1.GoogleError('Bundling enabled with no isBundling!');\n    }\n\n    status.call((argument, callback) => {\n      this.bundler.schedule(apiCall, argument, callback);\n      return status;\n    }, argument);\n  }\n\n  fail(canceller, err) {\n    canceller.callback(err);\n  }\n\n  result(canceller) {\n    return canceller.promise;\n  }\n\n}\n\nexports.BundleApiCaller = BundleApiCaller;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;AAkBA;;AAEA;AAKA;;;;;;AAIA,MAAaA,eAAb,CAA4B;AAG1BC,cAAYC,OAAZ,EAAmC;AACjC,SAAKA,OAAL,GAAeA,OAAf;AACD;;AAEDC,MAAI,CAACC,QAAD,EAAuB;AACzB,QAAIA,QAAJ,EAAc;AACZ,aAAO,IAAIC,kBAAJ,CAAgBD,QAAhB,CAAP;AACD;;AACD,WAAO,IAAIC,yBAAJ,EAAP;AACD;;AAEDC,MAAI,CAACC,IAAD,EAAe;AACjB,WAAOA,IAAP;AACD;;AAEDC,MAAI,CACFC,OADE,EAEFC,QAFE,EAGFC,QAHE,EAIFC,MAJE,EAIwB;AAE1B,QAAI,CAACD,QAAQ,CAACE,UAAd,EAA0B;AACxB,YAAM,IAAIC,yBAAJ,CAAgB,sCAAhB,CAAN;AACD;;AAEDF,UAAM,CAACJ,IAAP,CAAY,CAACE,QAAD,EAAeN,QAAf,KAAyC;AACnD,WAAKF,OAAL,CAAaa,QAAb,CAAsBN,OAAtB,EAA+BC,QAA/B,EAAyCN,QAAzC;AACA,aAAOQ,MAAP;AACD,KAHD,EAGGF,QAHH;AAID;;AAEDM,MAAI,CAACC,SAAD,EAAgCC,GAAhC,EAAgD;AAClDD,aAAS,CAACb,QAAV,CAAoBc,GAApB;AACD;;AAEDC,QAAM,CAACF,SAAD,EAA8B;AAClC,WAAOA,SAAS,CAACG,OAAjB;AACD;;AAxCyB;;AAA5BC","names":["BundleApiCaller","constructor","bundler","init","callback","call_1","wrap","func","call","apiCall","argument","settings","status","isBundling","googleError_1","schedule","fail","canceller","err","result","promise","exports"],"sources":["../../../src/bundlingCalls/bundleApiCaller.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}