{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rpcCodeFromHttpStatusCode = exports.HttpCodeToRpcCodeMap = exports.Status = void 0; // The following is a copy of the Status enum defined in @grpc/grpc-js,\n// src/constants.ts. We need to use some of these statuses here and there,\n// but we don't want to include the whole @grpc/grpc-js into the browser\n// bundle just to have this small enum.\n\nvar Status;\n\n(function (Status) {\n  Status[Status[\"OK\"] = 0] = \"OK\";\n  Status[Status[\"CANCELLED\"] = 1] = \"CANCELLED\";\n  Status[Status[\"UNKNOWN\"] = 2] = \"UNKNOWN\";\n  Status[Status[\"INVALID_ARGUMENT\"] = 3] = \"INVALID_ARGUMENT\";\n  Status[Status[\"DEADLINE_EXCEEDED\"] = 4] = \"DEADLINE_EXCEEDED\";\n  Status[Status[\"NOT_FOUND\"] = 5] = \"NOT_FOUND\";\n  Status[Status[\"ALREADY_EXISTS\"] = 6] = \"ALREADY_EXISTS\";\n  Status[Status[\"PERMISSION_DENIED\"] = 7] = \"PERMISSION_DENIED\";\n  Status[Status[\"RESOURCE_EXHAUSTED\"] = 8] = \"RESOURCE_EXHAUSTED\";\n  Status[Status[\"FAILED_PRECONDITION\"] = 9] = \"FAILED_PRECONDITION\";\n  Status[Status[\"ABORTED\"] = 10] = \"ABORTED\";\n  Status[Status[\"OUT_OF_RANGE\"] = 11] = \"OUT_OF_RANGE\";\n  Status[Status[\"UNIMPLEMENTED\"] = 12] = \"UNIMPLEMENTED\";\n  Status[Status[\"INTERNAL\"] = 13] = \"INTERNAL\";\n  Status[Status[\"UNAVAILABLE\"] = 14] = \"UNAVAILABLE\";\n  Status[Status[\"DATA_LOSS\"] = 15] = \"DATA_LOSS\";\n  Status[Status[\"UNAUTHENTICATED\"] = 16] = \"UNAUTHENTICATED\";\n})(Status = exports.Status || (exports.Status = {}));\n\nexports.HttpCodeToRpcCodeMap = new Map([[400, Status.INVALID_ARGUMENT], [401, Status.UNAUTHENTICATED], [403, Status.PERMISSION_DENIED], [404, Status.NOT_FOUND], [409, Status.ABORTED], [416, Status.OUT_OF_RANGE], [429, Status.RESOURCE_EXHAUSTED], [499, Status.CANCELLED], [501, Status.UNIMPLEMENTED], [503, Status.UNAVAILABLE], [504, Status.DEADLINE_EXCEEDED]]); // Maps HTTP status codes to gRPC status codes above.\n\nfunction rpcCodeFromHttpStatusCode(httpStatusCode) {\n  if (exports.HttpCodeToRpcCodeMap.has(httpStatusCode)) {\n    return exports.HttpCodeToRpcCodeMap.get(httpStatusCode);\n  } // All 2xx\n\n\n  if (httpStatusCode >= 200 && httpStatusCode < 300) {\n    return Status.OK;\n  } // All other 4xx\n\n\n  if (httpStatusCode >= 400 && httpStatusCode < 500) {\n    return Status.FAILED_PRECONDITION;\n  } // All other 5xx\n\n\n  if (httpStatusCode >= 500 && httpStatusCode < 600) {\n    return Status.INTERNAL;\n  } // Everything else\n\n\n  return Status.UNKNOWN;\n}\n\nexports.rpcCodeFromHttpStatusCode = rpcCodeFromHttpStatusCode;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;4FAgBA;AACA;AACA;AACA;;AAEA,IAAYA,MAAZ;;AAAA,WAAYA,MAAZ,EAAkB;AAChBA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACD,CAlBD,EAAYA,MAAM,GAANC,oCAAM,EAAN,CAAZ;;AAoBaA,+BAAuB,IAAIC,GAAJ,CAAQ,CAC1C,CAAC,GAAD,EAAMF,MAAM,CAACG,gBAAb,CAD0C,EAE1C,CAAC,GAAD,EAAMH,MAAM,CAACI,eAAb,CAF0C,EAG1C,CAAC,GAAD,EAAMJ,MAAM,CAACK,iBAAb,CAH0C,EAI1C,CAAC,GAAD,EAAML,MAAM,CAACM,SAAb,CAJ0C,EAK1C,CAAC,GAAD,EAAMN,MAAM,CAACO,OAAb,CAL0C,EAM1C,CAAC,GAAD,EAAMP,MAAM,CAACQ,YAAb,CAN0C,EAO1C,CAAC,GAAD,EAAMR,MAAM,CAACS,kBAAb,CAP0C,EAQ1C,CAAC,GAAD,EAAMT,MAAM,CAACU,SAAb,CAR0C,EAS1C,CAAC,GAAD,EAAMV,MAAM,CAACW,aAAb,CAT0C,EAU1C,CAAC,GAAD,EAAMX,MAAM,CAACY,WAAb,CAV0C,EAW1C,CAAC,GAAD,EAAMZ,MAAM,CAACa,iBAAb,CAX0C,CAAR,CAAvB,C,CAcb;;AACA,SAAgBC,yBAAhB,CAA0CC,cAA1C,EAAgE;AAC9D,MAAId,6BAAqBe,GAArB,CAAyBD,cAAzB,CAAJ,EAA8C;AAC5C,WAAOd,6BAAqBgB,GAArB,CAAyBF,cAAzB,CAAP;AACD,GAH6D,CAI9D;;;AACA,MAAIA,cAAc,IAAI,GAAlB,IAAyBA,cAAc,GAAG,GAA9C,EAAmD;AACjD,WAAOf,MAAM,CAACkB,EAAd;AACD,GAP6D,CAQ9D;;;AACA,MAAIH,cAAc,IAAI,GAAlB,IAAyBA,cAAc,GAAG,GAA9C,EAAmD;AACjD,WAAOf,MAAM,CAACmB,mBAAd;AACD,GAX6D,CAY9D;;;AACA,MAAIJ,cAAc,IAAI,GAAlB,IAAyBA,cAAc,GAAG,GAA9C,EAAmD;AACjD,WAAOf,MAAM,CAACoB,QAAd;AACD,GAf6D,CAgB9D;;;AACA,SAAOpB,MAAM,CAACqB,OAAd;AACD;;AAlBDpB","names":["Status","exports","Map","INVALID_ARGUMENT","UNAUTHENTICATED","PERMISSION_DENIED","NOT_FOUND","ABORTED","OUT_OF_RANGE","RESOURCE_EXHAUSTED","CANCELLED","UNIMPLEMENTED","UNAVAILABLE","DEADLINE_EXCEEDED","rpcCodeFromHttpStatusCode","httpStatusCode","has","get","OK","FAILED_PRECONDITION","INTERNAL","UNKNOWN"],"sources":["../../src/status.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}