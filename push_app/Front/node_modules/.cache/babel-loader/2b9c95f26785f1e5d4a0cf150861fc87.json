{"ast":null,"code":"/**\n * @preserve date-and-time (c) KNOWLEDGECODE | MIT\n */\nvar locales = {},\n    plugins = {},\n    lang = 'en',\n    _res = {\n  MMMM: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  MMM: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  dddd: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  ddd: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  dd: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  A: ['AM', 'PM']\n},\n    _formatter = {\n  YYYY: function (d\n  /*, formatString*/\n  ) {\n    return ('000' + d.getFullYear()).slice(-4);\n  },\n  YY: function (d\n  /*, formatString*/\n  ) {\n    return ('0' + d.getFullYear()).slice(-2);\n  },\n  Y: function (d\n  /*, formatString*/\n  ) {\n    return '' + d.getFullYear();\n  },\n  MMMM: function (d\n  /*, formatString*/\n  ) {\n    return this.res.MMMM[d.getMonth()];\n  },\n  MMM: function (d\n  /*, formatString*/\n  ) {\n    return this.res.MMM[d.getMonth()];\n  },\n  MM: function (d\n  /*, formatString*/\n  ) {\n    return ('0' + (d.getMonth() + 1)).slice(-2);\n  },\n  M: function (d\n  /*, formatString*/\n  ) {\n    return '' + (d.getMonth() + 1);\n  },\n  DD: function (d\n  /*, formatString*/\n  ) {\n    return ('0' + d.getDate()).slice(-2);\n  },\n  D: function (d\n  /*, formatString*/\n  ) {\n    return '' + d.getDate();\n  },\n  HH: function (d\n  /*, formatString*/\n  ) {\n    return ('0' + d.getHours()).slice(-2);\n  },\n  H: function (d\n  /*, formatString*/\n  ) {\n    return '' + d.getHours();\n  },\n  A: function (d\n  /*, formatString*/\n  ) {\n    return this.res.A[d.getHours() > 11 | 0];\n  },\n  hh: function (d\n  /*, formatString*/\n  ) {\n    return ('0' + (d.getHours() % 12 || 12)).slice(-2);\n  },\n  h: function (d\n  /*, formatString*/\n  ) {\n    return '' + (d.getHours() % 12 || 12);\n  },\n  mm: function (d\n  /*, formatString*/\n  ) {\n    return ('0' + d.getMinutes()).slice(-2);\n  },\n  m: function (d\n  /*, formatString*/\n  ) {\n    return '' + d.getMinutes();\n  },\n  ss: function (d\n  /*, formatString*/\n  ) {\n    return ('0' + d.getSeconds()).slice(-2);\n  },\n  s: function (d\n  /*, formatString*/\n  ) {\n    return '' + d.getSeconds();\n  },\n  SSS: function (d\n  /*, formatString*/\n  ) {\n    return ('00' + d.getMilliseconds()).slice(-3);\n  },\n  SS: function (d\n  /*, formatString*/\n  ) {\n    return ('0' + (d.getMilliseconds() / 10 | 0)).slice(-2);\n  },\n  S: function (d\n  /*, formatString*/\n  ) {\n    return '' + (d.getMilliseconds() / 100 | 0);\n  },\n  dddd: function (d\n  /*, formatString*/\n  ) {\n    return this.res.dddd[d.getDay()];\n  },\n  ddd: function (d\n  /*, formatString*/\n  ) {\n    return this.res.ddd[d.getDay()];\n  },\n  dd: function (d\n  /*, formatString*/\n  ) {\n    return this.res.dd[d.getDay()];\n  },\n  Z: function (d\n  /*, formatString*/\n  ) {\n    var offset = d.getTimezoneOffset() / 0.6 | 0;\n    return (offset > 0 ? '-' : '+') + ('000' + Math.abs(offset - (offset % 100 * 0.4 | 0))).slice(-4);\n  },\n  post: function (str) {\n    return str;\n  },\n  res: _res\n},\n    _parser = {\n  YYYY: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d{4}/, str);\n  },\n  Y: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d{1,4}/, str);\n  },\n  MMMM: function (str\n  /*, formatString */\n  ) {\n    var result = this.find(this.res.MMMM, str);\n    result.value++;\n    return result;\n  },\n  MMM: function (str\n  /*, formatString */\n  ) {\n    var result = this.find(this.res.MMM, str);\n    result.value++;\n    return result;\n  },\n  MM: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d/, str);\n  },\n  M: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d?/, str);\n  },\n  DD: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d/, str);\n  },\n  D: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d?/, str);\n  },\n  HH: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d/, str);\n  },\n  H: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d?/, str);\n  },\n  A: function (str\n  /*, formatString */\n  ) {\n    return this.find(this.res.A, str);\n  },\n  hh: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d/, str);\n  },\n  h: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d?/, str);\n  },\n  mm: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d/, str);\n  },\n  m: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d?/, str);\n  },\n  ss: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d/, str);\n  },\n  s: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d\\d?/, str);\n  },\n  SSS: function (str\n  /*, formatString */\n  ) {\n    return this.exec(/^\\d{1,3}/, str);\n  },\n  SS: function (str\n  /*, formatString */\n  ) {\n    var result = this.exec(/^\\d\\d?/, str);\n    result.value *= 10;\n    return result;\n  },\n  S: function (str\n  /*, formatString */\n  ) {\n    var result = this.exec(/^\\d/, str);\n    result.value *= 100;\n    return result;\n  },\n  Z: function (str\n  /*, formatString */\n  ) {\n    var result = this.exec(/^[\\+-]\\d{2}[0-5]\\d/, str);\n    result.value = (result.value / 100 | 0) * -60 - result.value % 100;\n    return result;\n  },\n  h12: function (h, a) {\n    return (h === 12 ? 0 : h) + a * 12;\n  },\n  exec: function (re, str) {\n    var result = (re.exec(str) || [''])[0];\n    return {\n      value: result | 0,\n      length: result.length\n    };\n  },\n  find: function (array, str) {\n    var index = -1,\n        length = 0;\n\n    for (var i = 0, len = array.length, item; i < len; i++) {\n      item = array[i];\n\n      if (!str.indexOf(item) && item.length > length) {\n        index = i;\n        length = item.length;\n      }\n    }\n\n    return {\n      value: index,\n      length: length\n    };\n  },\n  pre: function (str) {\n    return str;\n  },\n  res: _res\n},\n    extend = function (base, props, override, res) {\n  var obj = {},\n      key;\n\n  for (key in base) {\n    obj[key] = base[key];\n  }\n\n  for (key in props || {}) {\n    if (!(!!override ^ !!obj[key])) {\n      obj[key] = props[key];\n    }\n  }\n\n  if (res) {\n    obj.res = res;\n  }\n\n  return obj;\n},\n    proto = {\n  _formatter: _formatter,\n  _parser: _parser\n},\n    localized_proto,\n    date;\n/**\n * Compiling a format string\n * @param {string} formatString - a format string\n * @returns {Array.<string>} a compiled object\n */\n\n\nproto.compile = function (formatString) {\n  var re = /\\[([^\\[\\]]|\\[[^\\[\\]]*])*]|([A-Za-z])\\2+|\\.{3}|./g,\n      keys,\n      pattern = [formatString];\n\n  while (keys = re.exec(formatString)) {\n    pattern[pattern.length] = keys[0];\n  }\n\n  return pattern;\n};\n/**\n * Formatting a Date and Time\n * @param {Date} dateObj - a Date object\n * @param {string|Array.<string>} arg - a format string or its compiled object\n * @param {boolean} [utc] - output as UTC\n * @returns {string} a formatted string\n */\n\n\nproto.format = function (dateObj, arg, utc) {\n  var ctx = this || date,\n      pattern = typeof arg === 'string' ? ctx.compile(arg) : arg,\n      offset = dateObj.getTimezoneOffset(),\n      d = ctx.addMinutes(dateObj, utc ? offset : 0),\n      formatter = ctx._formatter,\n      str = '';\n\n  d.getTimezoneOffset = function () {\n    return utc ? 0 : offset;\n  };\n\n  for (var i = 1, len = pattern.length, token; i < len; i++) {\n    token = pattern[i];\n    str += formatter[token] ? formatter.post(formatter[token](d, pattern[0])) : token.replace(/\\[(.*)]/, '$1');\n  }\n\n  return str;\n};\n/**\n * Pre-parsing a Date and Time string\n * @param {string} dateString - a date string\n * @param {string|Array.<string>} arg - a format string or its compiled object\n * @returns {Object} a date structure\n */\n\n\nproto.preparse = function (dateString, arg) {\n  var ctx = this || date,\n      pattern = typeof arg === 'string' ? ctx.compile(arg) : arg,\n      dt = {\n    Y: 1970,\n    M: 1,\n    D: 1,\n    H: 0,\n    A: 0,\n    h: 0,\n    m: 0,\n    s: 0,\n    S: 0,\n    Z: 0,\n    _index: 0,\n    _length: 0,\n    _match: 0\n  },\n      comment = /\\[(.*)]/,\n      parser = ctx._parser,\n      offset = 0;\n  dateString = parser.pre(dateString);\n\n  for (var i = 1, len = pattern.length, token, result; i < len; i++) {\n    token = pattern[i];\n\n    if (parser[token]) {\n      result = parser[token](dateString.slice(offset), pattern[0]);\n\n      if (!result.length) {\n        break;\n      }\n\n      offset += result.length;\n      dt[result.token || token.charAt(0)] = result.value;\n      dt._match++;\n    } else if (token === dateString.charAt(offset) || token === ' ') {\n      offset++;\n    } else if (comment.test(token) && !dateString.slice(offset).indexOf(comment.exec(token)[1])) {\n      offset += token.length - 2;\n    } else if (token === '...') {\n      offset = dateString.length;\n      break;\n    } else {\n      break;\n    }\n  }\n\n  dt.H = dt.H || parser.h12(dt.h, dt.A);\n  dt._index = offset;\n  dt._length = dateString.length;\n  return dt;\n};\n/**\n * Parsing a Date and Time string\n * @param {string} dateString - a date string\n * @param {string|Array.<string>} arg - a format string or its compiled object\n * @param {boolean} [utc] - input as UTC\n * @returns {Date} a constructed date\n */\n\n\nproto.parse = function (dateString, arg, utc) {\n  var ctx = this || date,\n      dt = ctx.preparse(dateString, arg);\n\n  if (ctx.isValid(dt)) {\n    dt.M -= dt.Y < 100 ? 22801 : 1; // 22801 = 1900 * 12 + 1\n\n    if (utc || dt.Z) {\n      return new Date(Date.UTC(dt.Y, dt.M, dt.D, dt.H, dt.m + dt.Z, dt.s, dt.S));\n    }\n\n    return new Date(dt.Y, dt.M, dt.D, dt.H, dt.m, dt.s, dt.S);\n  }\n\n  return new Date(NaN);\n};\n/**\n * Validation\n * @param {Object|string} arg1 - a date structure or a date string\n * @param {string|Array.<string>} [arg2] - a format string or its compiled object\n * @returns {boolean} whether the date string is a valid date\n */\n\n\nproto.isValid = function (arg1, arg2) {\n  var ctx = this || date,\n      dt = typeof arg1 === 'string' ? ctx.preparse(arg1, arg2) : arg1,\n      last = [31, 28 + ctx.isLeapYear(dt.Y) | 0, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][dt.M - 1];\n  return !(dt._index < 1 || dt._length < 1 || dt._index - dt._length || dt._match < 1 || dt.Y < 1 || dt.Y > 9999 || dt.M < 1 || dt.M > 12 || dt.D < 1 || dt.D > last || dt.H < 0 || dt.H > 23 || dt.m < 0 || dt.m > 59 || dt.s < 0 || dt.s > 59 || dt.S < 0 || dt.S > 999 || dt.Z < -840 || dt.Z > 720);\n};\n/**\n * Transforming a Date and Time string\n * @param {string} dateString - a date string\n * @param {string|Array.<string>} arg1 - a format string or its compiled object\n * @param {string|Array.<string>} arg2 - a transformed format string or its compiled object\n * @param {boolean} [utc] - output as UTC\n * @returns {string} a formatted string\n */\n\n\nproto.transform = function (dateString, arg1, arg2, utc) {\n  const ctx = this || date;\n  return ctx.format(ctx.parse(dateString, arg1), arg2, utc);\n};\n/**\n * Adding years\n * @param {Date} dateObj - a date object\n * @param {number} years - number of years to add\n * @returns {Date} a date after adding the value\n */\n\n\nproto.addYears = function (dateObj, years) {\n  return (this || date).addMonths(dateObj, years * 12);\n};\n/**\n * Adding months\n * @param {Date} dateObj - a date object\n * @param {number} months - number of months to add\n * @returns {Date} a date after adding the value\n */\n\n\nproto.addMonths = function (dateObj, months) {\n  var d = new Date(dateObj.getTime());\n  d.setMonth(d.getMonth() + months);\n  return d;\n};\n/**\n * Adding days\n * @param {Date} dateObj - a date object\n * @param {number} days - number of days to add\n * @returns {Date} a date after adding the value\n */\n\n\nproto.addDays = function (dateObj, days) {\n  var d = new Date(dateObj.getTime());\n  d.setDate(d.getDate() + days);\n  return d;\n};\n/**\n * Adding hours\n * @param {Date} dateObj - a date object\n * @param {number} hours - number of hours to add\n * @returns {Date} a date after adding the value\n */\n\n\nproto.addHours = function (dateObj, hours) {\n  return (this || date).addMinutes(dateObj, hours * 60);\n};\n/**\n * Adding minutes\n * @param {Date} dateObj - a date object\n * @param {number} minutes - number of minutes to add\n * @returns {Date} a date after adding the value\n */\n\n\nproto.addMinutes = function (dateObj, minutes) {\n  return (this || date).addSeconds(dateObj, minutes * 60);\n};\n/**\n * Adding seconds\n * @param {Date} dateObj - a date object\n * @param {number} seconds - number of seconds to add\n * @returns {Date} a date after adding the value\n */\n\n\nproto.addSeconds = function (dateObj, seconds) {\n  return (this || date).addMilliseconds(dateObj, seconds * 1000);\n};\n/**\n * Adding milliseconds\n * @param {Date} dateObj - a date object\n * @param {number} milliseconds - number of milliseconds to add\n * @returns {Date} a date after adding the value\n */\n\n\nproto.addMilliseconds = function (dateObj, milliseconds) {\n  return new Date(dateObj.getTime() + milliseconds);\n};\n/**\n * Subtracting two dates\n * @param {Date} date1 - a Date object\n * @param {Date} date2 - a Date object\n * @returns {Object} a result object subtracting date2 from date1\n */\n\n\nproto.subtract = function (date1, date2) {\n  var delta = date1.getTime() - date2.getTime();\n  return {\n    toMilliseconds: function () {\n      return delta;\n    },\n    toSeconds: function () {\n      return delta / 1000;\n    },\n    toMinutes: function () {\n      return delta / 60000;\n    },\n    toHours: function () {\n      return delta / 3600000;\n    },\n    toDays: function () {\n      return delta / 86400000;\n    }\n  };\n};\n/**\n * Whether year is leap year\n * @param {number} y - year\n * @returns {boolean} whether year is leap year\n */\n\n\nproto.isLeapYear = function (y) {\n  return !(y % 4) && !!(y % 100) || !(y % 400);\n};\n/**\n * Comparison of two dates\n * @param {Date} date1 - a Date object\n * @param {Date} date2 - a Date object\n * @returns {boolean} whether the two dates are the same day (time is ignored)\n */\n\n\nproto.isSameDay = function (date1, date2) {\n  return date1.toDateString() === date2.toDateString();\n};\n/**\n * Defining new locale\n * @param {string} code - language code\n * @param {Function} locale - locale installer\n * @returns {string} current language code\n */\n\n\nproto.locale = function (code, locale) {\n  if (!locales[code]) {\n    locales[code] = locale;\n  }\n};\n/**\n * Defining new plugin\n * @param {string} name - plugin name\n * @param {Function} plugin - plugin installer\n * @returns {void}\n */\n\n\nproto.plugin = function (name, plugin) {\n  if (!plugins[name]) {\n    plugins[name] = plugin;\n  }\n};\n\nlocalized_proto = extend(proto);\ndate = extend(proto);\n/**\n * Changing locale\n * @param {Function|string} [locale] - locale object | language code\n * @returns {string} current language code\n */\n\ndate.locale = function (locale) {\n  var install = typeof locale === 'function' ? locale : date.locale[locale];\n\n  if (!install) {\n    return lang;\n  }\n\n  lang = install(proto);\n  var extension = locales[lang] || {};\n  var res = extend(_res, extension.res, true);\n  var formatter = extend(_formatter, extension.formatter, true, res);\n  var parser = extend(_parser, extension.parser, true, res);\n  date._formatter = localized_proto._formatter = formatter;\n  date._parser = localized_proto._parser = parser;\n\n  for (var plugin in plugins) {\n    date.extend(plugins[plugin]);\n  }\n\n  return lang;\n};\n/**\n * Feature extension\n * @param {Object} extension - extension object\n * @returns {void}\n */\n\n\ndate.extend = function (extension) {\n  var res = extend(date._parser.res, extension.res);\n  var extender = extension.extender || {};\n  date._formatter = extend(date._formatter, extension.formatter, false, res);\n  date._parser = extend(date._parser, extension.parser, false, res);\n\n  for (var key in extender) {\n    if (!date[key]) {\n      date[key] = extender[key];\n    }\n  }\n};\n/**\n * Importing plugin\n * @param {Function|string} plugin - plugin object | plugin name\n * @returns {void}\n */\n\n\ndate.plugin = function (plugin) {\n  var install = typeof plugin === 'function' ? plugin : date.plugin[plugin];\n\n  if (install) {\n    date.extend(plugins[install(proto, localized_proto)] || {});\n  }\n};\n\nvar date$1 = date;\nexport { date$1 as default };","map":{"version":3,"sources":["/Users/jaimeojeda/Documents/firebase/push_app/node_modules/date-and-time/esm/date-and-time.es.js"],"names":["locales","plugins","lang","_res","MMMM","MMM","dddd","ddd","dd","A","_formatter","YYYY","d","getFullYear","slice","YY","Y","res","getMonth","MM","M","DD","getDate","D","HH","getHours","H","hh","h","mm","getMinutes","m","ss","getSeconds","s","SSS","getMilliseconds","SS","S","getDay","Z","offset","getTimezoneOffset","Math","abs","post","str","_parser","exec","result","find","value","h12","a","re","length","array","index","i","len","item","indexOf","pre","extend","base","props","override","obj","key","proto","localized_proto","date","compile","formatString","keys","pattern","format","dateObj","arg","utc","ctx","addMinutes","formatter","token","replace","preparse","dateString","dt","_index","_length","_match","comment","parser","charAt","test","parse","isValid","Date","UTC","NaN","arg1","arg2","last","isLeapYear","transform","addYears","years","addMonths","months","getTime","setMonth","addDays","days","setDate","addHours","hours","minutes","addSeconds","seconds","addMilliseconds","milliseconds","subtract","date1","date2","delta","toMilliseconds","toSeconds","toMinutes","toHours","toDays","y","isSameDay","toDateString","locale","code","plugin","name","install","extension","extender","date$1","default"],"mappings":"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","sourcesContent":["/**\n * @preserve date-and-time (c) KNOWLEDGECODE | MIT\n */\n\nvar locales = {},\n    plugins = {},\n    lang = 'en',\n    _res = {\n        MMMM: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n        MMM: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        dddd: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        ddd: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        dd: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n        A: ['AM', 'PM']\n    },\n    _formatter = {\n        YYYY: function (d/*, formatString*/) { return ('000' + d.getFullYear()).slice(-4); },\n        YY: function (d/*, formatString*/) { return ('0' + d.getFullYear()).slice(-2); },\n        Y: function (d/*, formatString*/) { return '' + d.getFullYear(); },\n        MMMM: function (d/*, formatString*/) { return this.res.MMMM[d.getMonth()]; },\n        MMM: function (d/*, formatString*/) { return this.res.MMM[d.getMonth()]; },\n        MM: function (d/*, formatString*/) { return ('0' + (d.getMonth() + 1)).slice(-2); },\n        M: function (d/*, formatString*/) { return '' + (d.getMonth() + 1); },\n        DD: function (d/*, formatString*/) { return ('0' + d.getDate()).slice(-2); },\n        D: function (d/*, formatString*/) { return '' + d.getDate(); },\n        HH: function (d/*, formatString*/) { return ('0' + d.getHours()).slice(-2); },\n        H: function (d/*, formatString*/) { return '' + d.getHours(); },\n        A: function (d/*, formatString*/) { return this.res.A[d.getHours() > 11 | 0]; },\n        hh: function (d/*, formatString*/) { return ('0' + (d.getHours() % 12 || 12)).slice(-2); },\n        h: function (d/*, formatString*/) { return '' + (d.getHours() % 12 || 12); },\n        mm: function (d/*, formatString*/) { return ('0' + d.getMinutes()).slice(-2); },\n        m: function (d/*, formatString*/) { return '' + d.getMinutes(); },\n        ss: function (d/*, formatString*/) { return ('0' + d.getSeconds()).slice(-2); },\n        s: function (d/*, formatString*/) { return '' + d.getSeconds(); },\n        SSS: function (d/*, formatString*/) { return ('00' + d.getMilliseconds()).slice(-3); },\n        SS: function (d/*, formatString*/) { return ('0' + (d.getMilliseconds() / 10 | 0)).slice(-2); },\n        S: function (d/*, formatString*/) { return '' + (d.getMilliseconds() / 100 | 0); },\n        dddd: function (d/*, formatString*/) { return this.res.dddd[d.getDay()]; },\n        ddd: function (d/*, formatString*/) { return this.res.ddd[d.getDay()]; },\n        dd: function (d/*, formatString*/) { return this.res.dd[d.getDay()]; },\n        Z: function (d/*, formatString*/) {\n            var offset = d.getTimezoneOffset() / 0.6 | 0;\n            return (offset > 0 ? '-' : '+') + ('000' + Math.abs(offset - (offset % 100 * 0.4 | 0))).slice(-4);\n        },\n        post: function (str) { return str; },\n        res: _res\n    },\n    _parser = {\n        YYYY: function (str/*, formatString */) { return this.exec(/^\\d{4}/, str); },\n        Y: function (str/*, formatString */) { return this.exec(/^\\d{1,4}/, str); },\n        MMMM: function (str/*, formatString */) {\n            var result = this.find(this.res.MMMM, str);\n            result.value++;\n            return result;\n        },\n        MMM: function (str/*, formatString */) {\n            var result = this.find(this.res.MMM, str);\n            result.value++;\n            return result;\n        },\n        MM: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n        M: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n        DD: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n        D: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n        HH: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n        H: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n        A: function (str/*, formatString */) { return this.find(this.res.A, str); },\n        hh: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n        h: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n        mm: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n        m: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n        ss: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n        s: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n        SSS: function (str/*, formatString */) { return this.exec(/^\\d{1,3}/, str); },\n        SS: function (str/*, formatString */) {\n            var result = this.exec(/^\\d\\d?/, str);\n            result.value *= 10;\n            return result;\n        },\n        S: function (str/*, formatString */) {\n            var result = this.exec(/^\\d/, str);\n            result.value *= 100;\n            return result;\n        },\n        Z: function (str/*, formatString */) {\n            var result = this.exec(/^[\\+-]\\d{2}[0-5]\\d/, str);\n            result.value = (result.value / 100 | 0) * -60 - result.value % 100;\n            return result;\n        },\n        h12: function (h, a) { return (h === 12 ? 0 : h) + a * 12; },\n        exec: function (re, str) {\n            var result = (re.exec(str) || [''])[0];\n            return { value: result | 0, length: result.length };\n        },\n        find: function (array, str) {\n            var index = -1, length = 0;\n\n            for (var i = 0, len = array.length, item; i < len; i++) {\n                item = array[i];\n                if (!str.indexOf(item) && item.length > length) {\n                    index = i;\n                    length = item.length;\n                }\n            }\n            return { value: index, length: length };\n        },\n        pre: function (str) { return str; },\n        res: _res\n    },\n    extend = function (base, props, override, res) {\n        var obj = {}, key;\n\n        for (key in base) {\n            obj[key] = base[key];\n        }\n        for (key in props || {}) {\n            if (!(!!override ^ !!obj[key])) {\n                obj[key] = props[key];\n            }\n        }\n        if (res) {\n            obj.res = res;\n        }\n        return obj;\n    },\n    proto = {\n        _formatter: _formatter,\n        _parser: _parser\n    },\n    localized_proto,\n    date;\n\n/**\n * Compiling a format string\n * @param {string} formatString - a format string\n * @returns {Array.<string>} a compiled object\n */\nproto.compile = function (formatString) {\n    var re = /\\[([^\\[\\]]|\\[[^\\[\\]]*])*]|([A-Za-z])\\2+|\\.{3}|./g, keys, pattern = [formatString];\n\n    while ((keys = re.exec(formatString))) {\n        pattern[pattern.length] = keys[0];\n    }\n    return pattern;\n};\n\n/**\n * Formatting a Date and Time\n * @param {Date} dateObj - a Date object\n * @param {string|Array.<string>} arg - a format string or its compiled object\n * @param {boolean} [utc] - output as UTC\n * @returns {string} a formatted string\n */\nproto.format = function (dateObj, arg, utc) {\n    var ctx = this || date, pattern = typeof arg === 'string' ? ctx.compile(arg) : arg,\n        offset = dateObj.getTimezoneOffset(),\n        d = ctx.addMinutes(dateObj, utc ? offset : 0),\n        formatter = ctx._formatter, str = '';\n\n    d.getTimezoneOffset = function () { return utc ? 0 : offset; };\n    for (var i = 1, len = pattern.length, token; i < len; i++) {\n        token = pattern[i];\n        str += formatter[token] ? formatter.post(formatter[token](d, pattern[0])) : token.replace(/\\[(.*)]/, '$1');\n    }\n    return str;\n};\n\n/**\n * Pre-parsing a Date and Time string\n * @param {string} dateString - a date string\n * @param {string|Array.<string>} arg - a format string or its compiled object\n * @returns {Object} a date structure\n */\nproto.preparse = function (dateString, arg) {\n    var ctx = this || date, pattern = typeof arg === 'string' ? ctx.compile(arg) : arg,\n        dt = { Y: 1970, M: 1, D: 1, H: 0, A: 0, h: 0, m: 0, s: 0, S: 0, Z: 0, _index: 0, _length: 0, _match: 0 },\n        comment = /\\[(.*)]/, parser = ctx._parser, offset = 0;\n\n    dateString = parser.pre(dateString);\n    for (var i = 1, len = pattern.length, token, result; i < len; i++) {\n        token = pattern[i];\n        if (parser[token]) {\n            result = parser[token](dateString.slice(offset), pattern[0]);\n            if (!result.length) {\n                break;\n            }\n            offset += result.length;\n            dt[result.token || token.charAt(0)] = result.value;\n            dt._match++;\n        } else if (token === dateString.charAt(offset) || token === ' ') {\n            offset++;\n        } else if (comment.test(token) && !dateString.slice(offset).indexOf(comment.exec(token)[1])) {\n            offset += token.length - 2;\n        } else if (token === '...') {\n            offset = dateString.length;\n            break;\n        } else {\n            break;\n        }\n    }\n    dt.H = dt.H || parser.h12(dt.h, dt.A);\n    dt._index = offset;\n    dt._length = dateString.length;\n    return dt;\n};\n\n/**\n * Parsing a Date and Time string\n * @param {string} dateString - a date string\n * @param {string|Array.<string>} arg - a format string or its compiled object\n * @param {boolean} [utc] - input as UTC\n * @returns {Date} a constructed date\n */\nproto.parse = function (dateString, arg, utc) {\n    var ctx = this || date, dt = ctx.preparse(dateString, arg);\n\n    if (ctx.isValid(dt)) {\n        dt.M -= dt.Y < 100 ? 22801 : 1; // 22801 = 1900 * 12 + 1\n        if (utc || dt.Z) {\n            return new Date(Date.UTC(dt.Y, dt.M, dt.D, dt.H, dt.m + dt.Z, dt.s, dt.S));\n        }\n        return new Date(dt.Y, dt.M, dt.D, dt.H, dt.m, dt.s, dt.S);\n    }\n    return new Date(NaN);\n};\n\n/**\n * Validation\n * @param {Object|string} arg1 - a date structure or a date string\n * @param {string|Array.<string>} [arg2] - a format string or its compiled object\n * @returns {boolean} whether the date string is a valid date\n */\nproto.isValid = function (arg1, arg2) {\n    var ctx = this || date, dt = typeof arg1 === 'string' ? ctx.preparse(arg1, arg2) : arg1,\n        last = [31, 28 + ctx.isLeapYear(dt.Y) | 0, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][dt.M - 1];\n\n    return !(\n        dt._index < 1 || dt._length < 1 || dt._index - dt._length || dt._match < 1 ||\n        dt.Y < 1 || dt.Y > 9999 || dt.M < 1 || dt.M > 12 || dt.D < 1 || dt.D > last ||\n        dt.H < 0 || dt.H > 23 || dt.m < 0 || dt.m > 59 || dt.s < 0 || dt.s > 59 || dt.S < 0 || dt.S > 999 ||\n        dt.Z < -840 || dt.Z > 720\n    );\n};\n\n/**\n * Transforming a Date and Time string\n * @param {string} dateString - a date string\n * @param {string|Array.<string>} arg1 - a format string or its compiled object\n * @param {string|Array.<string>} arg2 - a transformed format string or its compiled object\n * @param {boolean} [utc] - output as UTC\n * @returns {string} a formatted string\n */\nproto.transform = function (dateString, arg1, arg2, utc) {\n    const ctx = this || date;\n    return ctx.format(ctx.parse(dateString, arg1), arg2, utc);\n};\n\n/**\n * Adding years\n * @param {Date} dateObj - a date object\n * @param {number} years - number of years to add\n * @returns {Date} a date after adding the value\n */\nproto.addYears = function (dateObj, years) {\n    return (this || date).addMonths(dateObj, years * 12);\n};\n\n/**\n * Adding months\n * @param {Date} dateObj - a date object\n * @param {number} months - number of months to add\n * @returns {Date} a date after adding the value\n */\nproto.addMonths = function (dateObj, months) {\n    var d = new Date(dateObj.getTime());\n\n    d.setMonth(d.getMonth() + months);\n    return d;\n};\n\n/**\n * Adding days\n * @param {Date} dateObj - a date object\n * @param {number} days - number of days to add\n * @returns {Date} a date after adding the value\n */\nproto.addDays = function (dateObj, days) {\n    var d = new Date(dateObj.getTime());\n\n    d.setDate(d.getDate() + days);\n    return d;\n};\n\n/**\n * Adding hours\n * @param {Date} dateObj - a date object\n * @param {number} hours - number of hours to add\n * @returns {Date} a date after adding the value\n */\nproto.addHours = function (dateObj, hours) {\n    return (this || date).addMinutes(dateObj, hours * 60);\n};\n\n/**\n * Adding minutes\n * @param {Date} dateObj - a date object\n * @param {number} minutes - number of minutes to add\n * @returns {Date} a date after adding the value\n */\nproto.addMinutes = function (dateObj, minutes) {\n    return (this || date).addSeconds(dateObj, minutes * 60);\n};\n\n/**\n * Adding seconds\n * @param {Date} dateObj - a date object\n * @param {number} seconds - number of seconds to add\n * @returns {Date} a date after adding the value\n */\nproto.addSeconds = function (dateObj, seconds) {\n    return (this || date).addMilliseconds(dateObj, seconds * 1000);\n};\n\n/**\n * Adding milliseconds\n * @param {Date} dateObj - a date object\n * @param {number} milliseconds - number of milliseconds to add\n * @returns {Date} a date after adding the value\n */\nproto.addMilliseconds = function (dateObj, milliseconds) {\n    return new Date(dateObj.getTime() + milliseconds);\n};\n\n/**\n * Subtracting two dates\n * @param {Date} date1 - a Date object\n * @param {Date} date2 - a Date object\n * @returns {Object} a result object subtracting date2 from date1\n */\nproto.subtract = function (date1, date2) {\n    var delta = date1.getTime() - date2.getTime();\n\n    return {\n        toMilliseconds: function () {\n            return delta;\n        },\n        toSeconds: function () {\n            return delta / 1000;\n        },\n        toMinutes: function () {\n            return delta / 60000;\n        },\n        toHours: function () {\n            return delta / 3600000;\n        },\n        toDays: function () {\n            return delta / 86400000;\n        }\n    };\n};\n\n/**\n * Whether year is leap year\n * @param {number} y - year\n * @returns {boolean} whether year is leap year\n */\nproto.isLeapYear = function (y) {\n    return (!(y % 4) && !!(y % 100)) || !(y % 400);\n};\n\n/**\n * Comparison of two dates\n * @param {Date} date1 - a Date object\n * @param {Date} date2 - a Date object\n * @returns {boolean} whether the two dates are the same day (time is ignored)\n */\nproto.isSameDay = function (date1, date2) {\n    return date1.toDateString() === date2.toDateString();\n};\n\n/**\n * Defining new locale\n * @param {string} code - language code\n * @param {Function} locale - locale installer\n * @returns {string} current language code\n */\nproto.locale = function (code, locale) {\n    if (!locales[code]) {\n        locales[code] = locale;\n    }\n};\n\n/**\n * Defining new plugin\n * @param {string} name - plugin name\n * @param {Function} plugin - plugin installer\n * @returns {void}\n */\nproto.plugin = function (name, plugin) {\n    if (!plugins[name]) {\n        plugins[name] = plugin;\n    }\n};\n\nlocalized_proto = extend(proto);\ndate = extend(proto);\n\n/**\n * Changing locale\n * @param {Function|string} [locale] - locale object | language code\n * @returns {string} current language code\n */\ndate.locale = function (locale) {\n    var install = typeof locale === 'function' ? locale : date.locale[locale];\n\n    if (!install) {\n        return lang;\n    }\n    lang = install(proto);\n\n    var extension = locales[lang] || {};\n    var res = extend(_res, extension.res, true);\n    var formatter = extend(_formatter, extension.formatter, true, res);\n    var parser = extend(_parser, extension.parser, true, res);\n\n    date._formatter = localized_proto._formatter = formatter;\n    date._parser = localized_proto._parser = parser;\n\n    for (var plugin in plugins) {\n        date.extend(plugins[plugin]);\n    }\n\n    return lang;\n};\n\n/**\n * Feature extension\n * @param {Object} extension - extension object\n * @returns {void}\n */\ndate.extend = function (extension) {\n    var res = extend(date._parser.res, extension.res);\n    var extender = extension.extender || {};\n\n    date._formatter = extend(date._formatter, extension.formatter, false, res);\n    date._parser = extend(date._parser, extension.parser, false, res);\n\n    for (var key in extender) {\n        if (!date[key]) {\n            date[key] = extender[key];\n        }\n    }\n};\n\n/**\n * Importing plugin\n * @param {Function|string} plugin - plugin object | plugin name\n * @returns {void}\n */\ndate.plugin = function (plugin) {\n    var install = typeof plugin === 'function' ? plugin : date.plugin[plugin];\n\n    if (install) {\n        date.extend(plugins[install(proto, localized_proto)] || {});\n    }\n};\n\nvar date$1 = date;\n\nexport { date$1 as default };\n"]},"metadata":{},"sourceType":"module"}