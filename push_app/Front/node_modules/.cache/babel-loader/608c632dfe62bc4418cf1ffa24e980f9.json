{"ast":null,"code":"import * as firebase from 'firebase/app';\nimport { getMessaging } from \"firebase/messaging\"; // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBDhAyJlTYTdgz0v5ZhAHQ7onRnOErvSa8\",\n  authDomain: \"push-app-13b48.firebaseapp.com\",\n  //databaseURL: \"FROM FIREBASE CONSOLE\",\n  projectId: \"push-app-13b48\",\n  storageBucket: \"push-app-13b48.appspot.com\",\n  messagingSenderId: \"941794665646\",\n  appId: \"1:941794665646:web:a8c7bfcf17cfe8412eb93f\",\n  measurementId: \"FROM FIREBASE CONSOLE\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst messaging = getMessaging();\nconst publicKey = 'BMsvwwBB9mUKIFIW78yyuf2OpNhAkDevP44GePJSM2F2nur4Xre6JohlChvBxHyEB6NPly_hD6khRR5';\nconsole.log(publicKey, \"publicKey \");\nexport const getToken = async setTokenFound => {\n  let currentToken = \"\";\n\n  try {\n    currentToken = await messaging.getToken({\n      vapidKey: publicKey\n    });\n\n    if (currentToken) {\n      setTokenFound(true);\n      debugger;\n    } else {\n      setTokenFound(false);\n      debgger;\n    }\n  } catch (error) {\n    console.log(\"An error occurred while retrieving token. \", error);\n  }\n\n  return currentToken;\n};\nexport const onMessageListener = () => new Promise(resolve => {\n  messaging.onMessage(payload => {\n    resolve(payload);\n  });\n});","map":{"version":3,"sources":["/Users/jaimeojeda/Documents/firebase/push_app/src/firebaseInit.js"],"names":["firebase","getMessaging","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","messaging","publicKey","console","log","getToken","setTokenFound","currentToken","vapidKey","debgger","error","onMessageListener","Promise","resolve","onMessage","payload"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,cAA1B;AACA,SAASC,YAAT,QAA6B,oBAA7B,C,CAEA;;AACA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,gCAFO;AAGnB;AACAC,EAAAA,SAAS,EAAE,gBAJQ;AAKnBC,EAAAA,aAAa,EAAE,4BALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE,2CAPY;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAAvB;AAaAT,QAAQ,CAACU,aAAT,CAAuBR,cAAvB;AAEA,MAAMS,SAAS,GAAGV,YAAY,EAA9B;AAEA,MAAMW,SAAS,GAAG,iFAAlB;AAEAC,OAAO,CAACC,GAAR,CAAYF,SAAZ,EAAsB,YAAtB;AACA,OAAO,MAAMG,QAAQ,GAAG,MAAOC,aAAP,IAAyB;AAC7C,MAAIC,YAAY,GAAG,EAAnB;;AAEA,MAAI;AACAA,IAAAA,YAAY,GAAG,MAAMN,SAAS,CAACI,QAAV,CAAmB;AAAEG,MAAAA,QAAQ,EAAEN;AAAZ,KAAnB,CAArB;;AACA,QAAIK,YAAJ,EAAkB;AACdD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA;AACH,KAHD,MAGO;AACHA,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAG,MAAAA,OAAO;AACV;AACJ,GATD,CASE,OAAOC,KAAP,EAAc;AACZP,IAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ,EAA0DM,KAA1D;AACH;;AAED,SAAOH,YAAP;AACH,CAjBM;AAmBP,OAAO,MAAMI,iBAAiB,GAAG,MAC7B,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACrBZ,EAAAA,SAAS,CAACa,SAAV,CAAqBC,OAAD,IAAa;AAC7BF,IAAAA,OAAO,CAACE,OAAD,CAAP;AACH,GAFD;AAGH,CAJD,CADG","sourcesContent":["import * as firebase from 'firebase/app'\nimport { getMessaging } from \"firebase/messaging\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBDhAyJlTYTdgz0v5ZhAHQ7onRnOErvSa8\",\n    authDomain: \"push-app-13b48.firebaseapp.com\",\n    //databaseURL: \"FROM FIREBASE CONSOLE\",\n    projectId: \"push-app-13b48\",\n    storageBucket: \"push-app-13b48.appspot.com\",\n    messagingSenderId: \"941794665646\",\n    appId: \"1:941794665646:web:a8c7bfcf17cfe8412eb93f\",\n    measurementId: \"FROM FIREBASE CONSOLE\",\n\n};\n\n\nfirebase.initializeApp(firebaseConfig);\n\nconst messaging = getMessaging();\n\nconst publicKey = 'BMsvwwBB9mUKIFIW78yyuf2OpNhAkDevP44GePJSM2F2nur4Xre6JohlChvBxHyEB6NPly_hD6khRR5';\n\nconsole.log(publicKey,\"publicKey \");\nexport const getToken = async (setTokenFound) => {\n    let currentToken = \"\";\n\n    try {\n        currentToken = await messaging.getToken({ vapidKey: publicKey });\n        if (currentToken) {\n            setTokenFound(true);\n            debugger\n        } else {\n            setTokenFound(false);\n            debgger\n        }\n    } catch (error) {\n        console.log(\"An error occurred while retrieving token. \", error);\n    }\n\n    return currentToken;\n};\n\nexport const onMessageListener = () =>\n    new Promise((resolve) => {\n        messaging.onMessage((payload) => {\n            resolve(payload);\n        });\n    });"]},"metadata":{},"sourceType":"module"}