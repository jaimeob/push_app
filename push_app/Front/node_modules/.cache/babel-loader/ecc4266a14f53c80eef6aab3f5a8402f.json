{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IamClient = void 0;\n\nconst grpc_1 = require(\"./grpc\");\n\nconst fallback_1 = require(\"./fallback\");\n\nconst createApiCall_1 = require(\"./createApiCall\");\n\nconst routingHeader = require(\"./routingHeader\");\n\nconst gapicConfig = require(\"./iam_policy_service_client_config.json\");\n\nconst fallback = require(\"./fallback\");\n\nlet version = require('../../package.json').version;\n\nconst jsonProtos = require(\"../protos/iam_service.json\");\n/**\n *  Google Cloud IAM Client.\n *  This is manually written for providing methods [setIamPolicy, getIamPolicy, testIamPerssion] to the generated client.\n */\n\n\nclass IamClient {\n  constructor(gaxGrpc, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  options) {\n    this._terminated = false;\n    this.descriptors = {\n      page: {},\n      stream: {},\n      longrunning: {}\n    };\n    this.innerApiCalls = {};\n    this.gaxGrpc = gaxGrpc; // Ensure that options include the service address and port.\n\n    const opts = Object.assign({\n      servicePath: options.servicePath,\n      port: options.port,\n      clientConfig: options.clientConfig,\n      apiEndpoint: options.apiEndpoint,\n      fallback: options.fallback\n    }, options);\n    version = opts.fallback ? fallback.version : version;\n    this._gaxGrpc = opts.fallback ? new fallback_1.GrpcClient(opts) : new grpc_1.GrpcClient(opts);\n    opts.scopes = this.constructor.scopes; // Save options to use in initialize() method.\n\n    this._opts = opts; // Save the auth object to the client, for use by other methods.\n\n    this.auth = gaxGrpc.auth; // Determine the client header string.\n\n    const clientHeader = [`gax/${version}`, `gapic/${version}`];\n\n    if (typeof process !== 'undefined' && 'versions' in process) {\n      clientHeader.push(`gl-node/${process.versions.node}`);\n    } else {\n      clientHeader.push(`gl-web/${version}`);\n    }\n\n    if (!opts.fallback) {\n      clientHeader.push(`grpc/${gaxGrpc.grpcVersion}`);\n    }\n\n    if (opts.libName && opts.libVersion) {\n      clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n    } // Load the applicable protos.\n\n\n    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos); // Put together the default options sent with requests.\n\n    this._defaults = gaxGrpc.constructSettings('google.iam.v1.IAMPolicy', gapicConfig, opts.clientConfig || {}, {\n      'x-goog-api-client': clientHeader.join(' ')\n    });\n    this.innerApiCalls = {};\n  }\n  /**\n   * Initialize the client.\n   * Performs asynchronous operations (such as authentication) and prepares the client.\n   * This function will be called automatically when any class method is called for the\n   * first time, but if you need to initialize it before calling an actual method,\n   * feel free to call initialize() directly.\n   *\n   * You can await on this method if you want to make sure the client is initialized.\n   *\n   * @returns {Promise} A promise that resolves to an authenticated service stub.\n   */\n\n\n  initialize() {\n    var _this = this;\n\n    // If the client stub promise is already initialized, return immediately.\n    if (this.iamPolicyStub) {\n      return this.iamPolicyStub;\n    } // Put together the \"service stub\" for\n    // google.iam.v1.IAMPolicy.\n\n\n    this.iamPolicyStub = this.gaxGrpc.createStub(this._opts.fallback ? this._protos.lookupService('google.iam.v1.IAMPolicy') : this._protos.google.iam.v1.IAMPolicy, this._opts); // Iterate over each of the methods that the service provides\n    // and create an API call method for each.\n\n    const iamPolicyStubMethods = ['getIamPolicy', 'setIamPolicy', 'testIamPermissions'];\n\n    for (const methodName of iamPolicyStubMethods) {\n      const innerCallPromise = this.iamPolicyStub.then(stub => function () {\n        if (_this._terminated) {\n          return Promise.reject('The client has already been closed.');\n        }\n\n        const func = stub[methodName];\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return func.apply(stub, args);\n      }, err => () => {\n        throw err;\n      });\n      this.innerApiCalls[methodName] = createApiCall_1.createApiCall(innerCallPromise, this._defaults[methodName], this.descriptors.page[methodName]);\n    }\n\n    return this.iamPolicyStub;\n  }\n  /**\n   * The DNS address for this API service.\n   */\n\n\n  static get servicePath() {\n    return 'cloudkms.googleapis.com';\n  }\n  /**\n   * The DNS address for this API service - same as servicePath(),\n   * exists for compatibility reasons.\n   */\n\n\n  static get apiEndpoint() {\n    return 'cloudkms.googleapis.com';\n  }\n  /**\n   * The port for this API service.\n   */\n\n\n  static get port() {\n    return 443;\n  }\n  /**\n   * The scopes needed to make gRPC calls for every method defined\n   * in this service.\n   */\n\n\n  static get scopes() {\n    return ['https://www.googleapis.com/auth/cloud-platform', 'https://www.googleapis.com/auth/cloudkms'];\n  }\n\n  getProjectId(callback) {\n    if (this.auth && 'getProjectId' in this.auth) {\n      return this.auth.getProjectId(callback);\n    }\n\n    if (callback) {\n      callback(new Error('Cannot determine project ID.'));\n    } else {\n      return Promise.reject('Cannot determine project ID.');\n    }\n  }\n\n  getIamPolicy(request, optionsOrCallback, callback) {\n    let options;\n\n    if (optionsOrCallback instanceof Function && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = routingHeader.fromParams({\n      resource: request.resource\n    });\n    this.initialize();\n    return this.innerApiCalls.getIamPolicy(request, options, callback);\n  }\n\n  setIamPolicy(request, optionsOrCallback, callback) {\n    let options;\n\n    if (optionsOrCallback instanceof Function && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = routingHeader.fromParams({\n      resource: request.resource\n    });\n    this.initialize();\n    return this.innerApiCalls.setIamPolicy(request, options, callback);\n  }\n\n  testIamPermissions(request, optionsOrCallback, callback) {\n    let options;\n\n    if (optionsOrCallback instanceof Function && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = routingHeader.fromParams({\n      resource: request.resource\n    });\n    this.initialize();\n    return this.innerApiCalls.testIamPermissions(request, options, callback);\n  }\n  /**\n   * Terminate the GRPC channel and close the client.\n   *\n   * The client will no longer be usable and all future behavior is undefined.\n   */\n\n\n  close() {\n    this.initialize();\n\n    if (!this._terminated) {\n      return this.iamPolicyStub.then(stub => {\n        this._terminated = true;\n        stub.close();\n      });\n    }\n\n    return Promise.resolve();\n  }\n\n}\n\nexports.IamClient = IamClient;","map":{"version":3,"mappings":"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","names":["version","require","IamClient","constructor","gaxGrpc","options","page","stream","longrunning","opts","Object","assign","servicePath","port","clientConfig","apiEndpoint","fallback","_gaxGrpc","fallback_1","grpc_1","scopes","_opts","auth","clientHeader","process","push","versions","node","grpcVersion","libName","libVersion","_protos","loadProtoJSON","jsonProtos","_defaults","constructSettings","gapicConfig","join","innerApiCalls","initialize","iamPolicyStub","createStub","lookupService","google","iam","v1","IAMPolicy","iamPolicyStubMethods","methodName","innerCallPromise","then","stub","_terminated","Promise","reject","func","args","apply","err","createApiCall_1","descriptors","getProjectId","callback","Error","getIamPolicy","request","optionsOrCallback","Function","undefined","otherArgs","headers","routingHeader","fromParams","resource","setIamPolicy","testIamPermissions","close","resolve","exports"],"sources":["../../src/iamService.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}