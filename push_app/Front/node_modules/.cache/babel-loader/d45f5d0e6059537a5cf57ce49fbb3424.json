{"ast":null,"code":"import * as firebase from 'firebase/app';\nimport { getMessaging, getToken, onMessage } from \"firebase/messaging\"; // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBDhAyJlTYTdgz0v5ZhAHQ7onRnOErvSa8\",\n  authDomain: \"push-app-13b48.firebaseapp.com\",\n  //databaseURL: \"FROM FIREBASE CONSOLE\",\n  projectId: \"push-app-13b48\",\n  storageBucket: \"push-app-13b48.appspot.com\",\n  messagingSenderId: \"941794665646\",\n  appId: \"1:941794665646:web:a8c7bfcf17cfe8412eb93f\",\n  measurementId: \"FROM FIREBASE CONSOLE\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst messaging = getMessaging();\nconst publicKey = 'BMsvwwBB9mUKIFIW78yyuf2OpNhAkDevP44GePJSM2F2nur4Xre6JohlChvBxHyEB6NPly_hD6khRR5-aruxTog';\nexport const getUserToken = () => {\n  getToken(messaging, {\n    vapidKey: publicKey\n  }).then(currentToken => {\n    console.log(\"ENTRA ACA PA\");\n\n    if (currentToken) {\n      console.log(currentToken, \"currentToken ---\");\n      return currentToken; // Send the token to your server and update the UI if necessary\n      // ...\n    } else {\n      // Show permission request UI\n      console.log('No registration token available. Request permission to generate one.'); // ...\n    }\n  }).catch(err => {\n    console.log('An error occurred while retrieving token. ', err); // ...\n  });\n}; // The topic name can be optionally prefixed with \"/topics/\".\n\nconst topic = 'highScores'; // Send a message to devices subscribed to the provided topic.\n\nexport const sendMessage = message => {\n  console.log(message, \"OBJETO PARA ENVIAR NOTIFICACION\");\n  debugger;\n  getMessaging().send(message).then(response => {\n    // Response is a message ID string.\n    console.log('Successfully sent message:', response);\n  }).catch(error => {\n    console.log('Error sending message:', error);\n  });\n};\nonMessage(messaging, payload => {\n  console.log('Message received. ', payload); // ...\n});","map":{"version":3,"sources":["/Users/jaimeojeda/Documents/firebase/push_app/src/firebaseInit.js"],"names":["firebase","getMessaging","getToken","onMessage","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","messaging","publicKey","getUserToken","vapidKey","then","currentToken","console","log","catch","err","topic","sendMessage","message","send","response","error","payload"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,cAA1B;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,SAAjC,QAAkD,oBAAlD,C,CAGA;;AACA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,gCAFO;AAGnB;AACAC,EAAAA,SAAS,EAAE,gBAJQ;AAKnBC,EAAAA,aAAa,EAAE,4BALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE,2CAPY;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAAvB;AAaAX,QAAQ,CAACY,aAAT,CAAuBR,cAAvB;AAEA,MAAMS,SAAS,GAAGZ,YAAY,EAA9B;AAEA,MAAMa,SAAS,GAAG,yFAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC7Bb,EAAAA,QAAQ,CAACW,SAAD,EAAY;AAAEG,IAAAA,QAAQ,EAAEF;AAAZ,GAAZ,CAAR,CAA6CG,IAA7C,CAAmDC,YAAD,IAAkB;AACjEC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AACA,QAAIF,YAAJ,EAAkB;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ,EAA0B,kBAA1B;AACA,aAAOA,YAAP,CAFc,CAGd;AACA;AACH,KALD,MAKO;AACH;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,sEAAZ,EAFG,CAGH;AACH;AACJ,GAZA,EAYEC,KAZF,CAYSC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ,EAA0DE,GAA1D,EADc,CAEd;AACH,GAfA;AAgBJ,CAjBM,C,CAmBP;;AACA,MAAMC,KAAK,GAAG,YAAd,C,CAIA;;AACA,OAAO,MAAMC,WAAW,GAAIC,OAAD,IAAa;AAEpCN,EAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ,EAAqB,iCAArB;AACA;AACAxB,EAAAA,YAAY,GAAGyB,IAAf,CAAoBD,OAApB,EACKR,IADL,CACWU,QAAD,IAAc;AAChB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CO,QAA1C;AACH,GAJL,EAKKN,KALL,CAKYO,KAAD,IAAW;AACdT,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCQ,KAAtC;AACH,GAPL;AAQH,CAZM;AAePzB,SAAS,CAACU,SAAD,EAAagB,OAAD,IAAa;AAC9BV,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCS,OAAlC,EAD8B,CAE9B;AACH,CAHQ,CAAT","sourcesContent":["import * as firebase from 'firebase/app'\nimport { getMessaging, getToken, onMessage } from \"firebase/messaging\";\n\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBDhAyJlTYTdgz0v5ZhAHQ7onRnOErvSa8\",\n    authDomain: \"push-app-13b48.firebaseapp.com\",\n    //databaseURL: \"FROM FIREBASE CONSOLE\",\n    projectId: \"push-app-13b48\",\n    storageBucket: \"push-app-13b48.appspot.com\",\n    messagingSenderId: \"941794665646\",\n    appId: \"1:941794665646:web:a8c7bfcf17cfe8412eb93f\",\n    measurementId: \"FROM FIREBASE CONSOLE\",\n\n};\n\n\nfirebase.initializeApp(firebaseConfig);\n\nconst messaging = getMessaging();\n\nconst publicKey = 'BMsvwwBB9mUKIFIW78yyuf2OpNhAkDevP44GePJSM2F2nur4Xre6JohlChvBxHyEB6NPly_hD6khRR5-aruxTog';\n\nexport const getUserToken = () => {\n     getToken(messaging, { vapidKey: publicKey }).then((currentToken) => {\n        console.log(\"ENTRA ACA PA\");\n        if (currentToken) {\n            console.log(currentToken, \"currentToken ---\");\n            return currentToken\n            // Send the token to your server and update the UI if necessary\n            // ...\n        } else {\n            // Show permission request UI\n            console.log('No registration token available. Request permission to generate one.');\n            // ...\n        }\n    }).catch((err) => {\n        console.log('An error occurred while retrieving token. ', err);\n        // ...\n    });\n}\n\n// The topic name can be optionally prefixed with \"/topics/\".\nconst topic = 'highScores';\n\n\n\n// Send a message to devices subscribed to the provided topic.\nexport const sendMessage = (message) => {\n\n    console.log(message, \"OBJETO PARA ENVIAR NOTIFICACION\");\n    debugger\n    getMessaging().send(message)\n        .then((response) => {\n            // Response is a message ID string.\n            console.log('Successfully sent message:', response);\n        })\n        .catch((error) => {\n            console.log('Error sending message:', error);\n        });\n}\n\n\nonMessage(messaging, (payload) => {\n    console.log('Message received. ', payload);\n    // ...\n});\n\n"]},"metadata":{},"sourceType":"module"}