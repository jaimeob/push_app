{"ast":null,"code":"import * as firebase from 'firebase/app';\nimport { getMessaging, onMessage } from \"firebase/messaging\"; // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBDhAyJlTYTdgz0v5ZhAHQ7onRnOErvSa8\",\n  authDomain: \"push-app-13b48.firebaseapp.com\",\n  //databaseURL: \"FROM FIREBASE CONSOLE\",\n  projectId: \"push-app-13b48\",\n  storageBucket: \"push-app-13b48.appspot.com\",\n  messagingSenderId: \"941794665646\",\n  appId: \"1:941794665646:web:a8c7bfcf17cfe8412eb93f\",\n  measurementId: \"FROM FIREBASE CONSOLE\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport const messaging = getMessaging();\nexport const publicKey = 'BMsvwwBB9mUKIFIW78yyuf2OpNhAkDevP44GePJSM2F2nur4Xre6JohlChvBxHyEB6NPly_hD6khRR5-aruxTog'; // The topic name can be optionally prefixed with \"/topics/\".\n\nconst topic = 'highScores'; // Send a message to devices subscribed to the provided topic.\n\nexport const sendMessage = message => {\n  console.log(message, \"OBJETO PARA ENVIAR NOTIFICACION\");\n  const m = {\n    \"token\": message.token,\n    \"notification\": {\n      \"title\": message.titulo,\n      \"body\": message.mensaje\n    },\n    \"webpush\": {\n      \"headers\": {\n        \"Urgency\": \"high\"\n      },\n      \"notification\": {\n        \"title\": message.titulo,\n        \"body\": message.mensaje,\n        \"badge\": \"\"\n      }\n    }\n  };\n  console.log();\n  messaging.send(m).then(response => {\n    // Response is a message ID string.\n    console.log('Successfully sent message:', response);\n  }).catch(error => {\n    console.log('Error sending message:', error);\n  });\n};\nonMessage(messaging, payload => {\n  console.log('Message received. ', payload); // ...\n});","map":{"version":3,"sources":["/Users/jaimeojeda/Documents/firebase/push_app/src/firebaseInit.js"],"names":["firebase","getMessaging","onMessage","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","messaging","publicKey","topic","sendMessage","message","console","log","m","token","titulo","mensaje","send","then","response","catch","error","payload"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,cAA1B;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,oBAAxC,C,CAEA;;AACA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,gCAFO;AAGnB;AACAC,EAAAA,SAAS,EAAE,gBAJQ;AAKnBC,EAAAA,aAAa,EAAE,4BALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE,2CAPY;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAAvB;AAaAV,QAAQ,CAACW,aAAT,CAAuBR,cAAvB;AAEA,OAAO,MAAMS,SAAS,GAAGX,YAAY,EAA9B;AAEP,OAAO,MAAMY,SAAS,GAAG,yFAAlB,C,CAEP;;AACA,MAAMC,KAAK,GAAG,YAAd,C,CAIA;;AACA,OAAO,MAAMC,WAAW,GAAIC,OAAD,IAAa;AAEpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAAqB,iCAArB;AAEA,QAAMG,CAAC,GAAG;AACN,aAAUH,OAAO,CAACI,KADZ;AAEN,oBAAgB;AACd,eAASJ,OAAO,CAACK,MADH;AAEd,cAAQL,OAAO,CAACM;AAFF,KAFV;AAMN,eAAW;AACT,iBAAW;AACT,mBAAW;AADF,OADF;AAIT,sBAAgB;AACd,iBAASN,OAAO,CAACK,MADH;AAEd,gBAAQL,OAAO,CAACM,OAFF;AAGd,iBAAQ;AAHM;AAJP;AANL,GAAV;AAkBEL,EAAAA,OAAO,CAACC,GAAR;AACAN,EAAAA,SAAS,CAACW,IAAV,CAAeJ,CAAf,EACGK,IADH,CACSC,QAAD,IAAc;AAChB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CO,QAA1C;AACH,GAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;AACdV,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCS,KAAtC;AACH,GAPH;AAQL,CA/BM;AAkCPzB,SAAS,CAACU,SAAD,EAAagB,OAAD,IAAa;AAC9BX,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCU,OAAlC,EAD8B,CAE9B;AACH,CAHQ,CAAT","sourcesContent":["import * as firebase from 'firebase/app'\nimport { getMessaging, onMessage } from \"firebase/messaging\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBDhAyJlTYTdgz0v5ZhAHQ7onRnOErvSa8\",\n    authDomain: \"push-app-13b48.firebaseapp.com\",\n    //databaseURL: \"FROM FIREBASE CONSOLE\",\n    projectId: \"push-app-13b48\",\n    storageBucket: \"push-app-13b48.appspot.com\",\n    messagingSenderId: \"941794665646\",\n    appId: \"1:941794665646:web:a8c7bfcf17cfe8412eb93f\",\n    measurementId: \"FROM FIREBASE CONSOLE\",\n\n};\n\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const messaging = getMessaging();\n\nexport const publicKey = 'BMsvwwBB9mUKIFIW78yyuf2OpNhAkDevP44GePJSM2F2nur4Xre6JohlChvBxHyEB6NPly_hD6khRR5-aruxTog';\n\n// The topic name can be optionally prefixed with \"/topics/\".\nconst topic = 'highScores';\n\n\n\n// Send a message to devices subscribed to the provided topic.\nexport const sendMessage = (message) => {\n\n    console.log(message, \"OBJETO PARA ENVIAR NOTIFICACION\");\n\n    const m = {\n        \"token\" : message.token,\n        \"notification\": {\n          \"title\": message.titulo,\n          \"body\": message.mensaje\n        },\n        \"webpush\": {\n          \"headers\": {\n            \"Urgency\": \"high\"\n          },\n          \"notification\": {\n            \"title\": message.titulo,\n            \"body\": message.mensaje,\n            \"badge\":\"\"\n          },\n        }\n      }\n    \n      console.log()\n      messaging.send(m)\n        .then((response) => {\n            // Response is a message ID string.\n            console.log('Successfully sent message:', response);\n        })\n        .catch((error) => {\n            console.log('Error sending message:', error);\n        });\n}\n\n\nonMessage(messaging, (payload) => {\n    console.log('Message received. ', payload);\n    // ...\n});\n\n"]},"metadata":{},"sourceType":"module"}