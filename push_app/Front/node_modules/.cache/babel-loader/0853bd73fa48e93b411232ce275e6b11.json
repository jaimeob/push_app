{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PageDescriptor = void 0;\n\nconst ended = require(\"is-stream-ended\");\n\nconst stream_1 = require(\"stream\");\n\nconst normalApiCaller_1 = require(\"../normalCalls/normalApiCaller\");\n\nconst pagedApiCaller_1 = require(\"./pagedApiCaller\");\n\nconst maxAttemptsEmptyResponse = 10;\n/**\n * A descriptor for methods that support pagination.\n */\n\nclass PageDescriptor {\n  constructor(requestPageTokenField, responsePageTokenField, resourceField) {\n    this.requestPageTokenField = requestPageTokenField;\n    this.responsePageTokenField = responsePageTokenField;\n    this.resourceField = resourceField;\n  }\n  /**\n   * Creates a new object Stream which emits the resource on 'data' event.\n   */\n\n\n  createStream(apiCall, request, options) {\n    const stream = new stream_1.PassThrough({\n      objectMode: true\n    });\n    options = Object.assign({}, options, {\n      autoPaginate: false\n    });\n    const maxResults = 'maxResults' in options ? options.maxResults : -1;\n    let pushCount = 0;\n    let started = false;\n\n    function callback(err, resources, next, apiResp) {\n      if (err) {\n        stream.emit('error', err);\n        return;\n      } // emit full api response with every page.\n\n\n      stream.emit('response', apiResp);\n\n      for (let i = 0; i < resources.length; ++i) {\n        if (ended(stream)) {\n          return;\n        }\n\n        if (resources[i] === null) {\n          continue;\n        }\n\n        stream.push(resources[i]);\n        pushCount++;\n\n        if (pushCount === maxResults) {\n          stream.end();\n        }\n      }\n\n      if (ended(stream)) {\n        return;\n      }\n\n      if (!next) {\n        stream.end();\n        return;\n      } // When pageToken is specified in the original options, it will overwrite\n      // the page token field in the next request. Therefore it must be cleared.\n\n\n      if ('pageToken' in options) {\n        delete options.pageToken;\n      }\n\n      if (stream.isPaused()) {\n        request = next;\n        started = false;\n      } else {\n        setImmediate(apiCall, next, options, callback);\n      }\n    }\n\n    stream.on('resume', () => {\n      if (!started) {\n        started = true;\n        apiCall(request, options, callback);\n      }\n    });\n    return stream;\n  }\n  /**\n   * Create an async iterable which can be recursively called for data on-demand.\n   */\n\n\n  asyncIterate(apiCall, request, options) {\n    options = Object.assign({}, options, {\n      autoPaginate: false\n    });\n    const iterable = this.createIterator(apiCall, request, options);\n    return iterable;\n  }\n\n  createIterator(apiCall, request, options) {\n    const asyncIterable = {\n      [Symbol.asyncIterator]() {\n        let nextPageRequest = request;\n        const cache = [];\n        return {\n          async next() {\n            if (cache.length > 0) {\n              return Promise.resolve({\n                done: false,\n                value: cache.shift()\n              });\n            }\n\n            let attempts = 0;\n\n            while (cache.length === 0 && nextPageRequest) {\n              let result;\n              [result, nextPageRequest] = await apiCall(nextPageRequest, options); // For pagination response with protobuf map type, use tuple as representation.\n\n              if (result && !Array.isArray(result)) {\n                for (const [key, value] of Object.entries(result)) {\n                  cache.push([key, value]);\n                }\n              } else {\n                cache.push(...result);\n              }\n\n              if (cache.length === 0) {\n                ++attempts;\n\n                if (attempts > maxAttemptsEmptyResponse) {\n                  break;\n                }\n              }\n            }\n\n            if (cache.length === 0) {\n              return Promise.resolve({\n                done: true,\n                value: undefined\n              });\n            }\n\n            return Promise.resolve({\n              done: false,\n              value: cache.shift()\n            });\n          }\n\n        };\n      }\n\n    };\n    return asyncIterable;\n  }\n\n  getApiCaller(settings) {\n    if (!settings.autoPaginate) {\n      return new normalApiCaller_1.NormalApiCaller();\n    }\n\n    return new pagedApiCaller_1.PagedApiCaller(this);\n  }\n\n}\n\nexports.PageDescriptor = PageDescriptor;","map":{"version":3,"mappings":"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","names":["maxAttemptsEmptyResponse","PageDescriptor","constructor","requestPageTokenField","responsePageTokenField","resourceField","createStream","apiCall","request","options","stream","stream_1","objectMode","Object","assign","autoPaginate","maxResults","pushCount","started","callback","err","resources","next","apiResp","emit","i","length","ended","push","end","pageToken","isPaused","setImmediate","on","asyncIterate","iterable","createIterator","asyncIterable","Symbol","asyncIterator","nextPageRequest","cache","Promise","resolve","done","value","shift","attempts","result","Array","isArray","key","entries","undefined","getApiCaller","settings","normalApiCaller_1","pagedApiCaller_1","exports"],"sources":["../../../src/paginationCalls/pageDescriptor.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}