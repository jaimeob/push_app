{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StreamDescriptor = void 0;\n\nconst streamingApiCaller_1 = require(\"./streamingApiCaller\");\n/**\n * A descriptor for streaming calls.\n */\n\n\nclass StreamDescriptor {\n  constructor(streamType) {\n    this.type = streamType;\n    this.streaming = true;\n  }\n\n  getApiCaller(settings) {\n    // Right now retrying does not work with gRPC-streaming, because retryable\n    // assumes an API call returns an event emitter while gRPC-streaming methods\n    // return Stream.\n    // TODO: support retrying.\n    settings.retry = null;\n    return new streamingApiCaller_1.StreamingApiCaller(this);\n  }\n\n}\n\nexports.StreamDescriptor = StreamDescriptor;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;AAqBA;AAEA;;;;;AAGA,MAAaA,gBAAb,CAA6B;AAI3BC,cAAYC,UAAZ,EAAkC;AAChC,SAAKC,IAAL,GAAYD,UAAZ;AACA,SAAKE,SAAL,GAAiB,IAAjB;AACD;;AAEDC,cAAY,CAACC,QAAD,EAAuB;AACjC;AACA;AACA;AACA;AACAA,YAAQ,CAACC,KAAT,GAAiB,IAAjB;AACA,WAAO,IAAIC,uCAAJ,CAAuB,IAAvB,CAAP;AACD;;AAhB0B;;AAA7BC","names":["StreamDescriptor","constructor","streamType","type","streaming","getApiCaller","settings","retry","streamingApiCaller_1","exports"],"sources":["../../../src/streamingCalls/streamDescriptor.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}