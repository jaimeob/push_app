{"ast":null,"code":"\"use strict\"; // Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.wrapperFromProto3JSON = exports.wrapperToProto3JSON = void 0;\n\nconst assert = require(\"assert\");\n\nconst bytes_1 = require(\"./bytes\");\n\nfunction wrapperToProto3JSON(obj) {\n  if (!Object.prototype.hasOwnProperty.call(obj, 'value')) {\n    return null;\n  }\n\n  if (Buffer.isBuffer(obj.value) || obj.value instanceof Uint8Array) {\n    return (0, bytes_1.bytesToProto3JSON)(obj.value);\n  }\n\n  if (typeof obj.value === 'object') {\n    assert(obj.value.constructor.name === 'Long', `wrapperToProto3JSON: expected to see a number, a string, a boolean, or a Long, but got ${obj.value}`);\n    return obj.value.toString();\n  } // JSON accept special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n\n\n  if (typeof obj.value === 'number' && !Number.isFinite(obj.value)) {\n    return obj.value.toString();\n  }\n\n  return obj.value;\n}\n\nexports.wrapperToProto3JSON = wrapperToProto3JSON;\n\nfunction wrapperFromProto3JSON(typeName, json) {\n  if (json === null) {\n    return {\n      value: null\n    };\n  }\n\n  if (typeName === '.google.protobuf.BytesValue') {\n    if (typeof json !== 'string') {\n      throw new Error(`numberWrapperFromProto3JSON: expected to get a string for google.protobuf.BytesValue but got ${typeof json}`);\n    }\n\n    return {\n      value: (0, bytes_1.bytesFromProto3JSON)(json)\n    };\n  }\n\n  return {\n    value: json\n  };\n}\n\nexports.wrapperFromProto3JSON = wrapperFromProto3JSON;","map":{"version":3,"mappings":"cAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;AACA;;AAmBA,SAAgBA,mBAAhB,CACEC,GADF,EAC8E;AAE5E,MAAI,CAACC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,GAArC,EAA0C,OAA1C,CAAL,EAAyD;AACvD,WAAO,IAAP;AACD;;AACD,MAAIK,MAAM,CAACC,QAAP,CAAgBN,GAAG,CAACO,KAApB,KAA8BP,GAAG,CAACO,KAAJ,YAAqBC,UAAvD,EAAmE;AACjE,WAAO,+BAAkBR,GAAG,CAACO,KAAtB,CAAP;AACD;;AACD,MAAI,OAAOP,GAAG,CAACO,KAAX,KAAqB,QAAzB,EAAmC;AACjCE,UAAM,CACJT,GAAG,CAACO,KAAJ,CAAUG,WAAV,CAAsBC,IAAtB,KAA+B,MAD3B,EAEJ,0FAA0FX,GAAG,CAACO,KAAK,EAF/F,CAAN;AAIA,WAAQP,GAAG,CAACO,KAAJ,CAAuBK,QAAvB,EAAR;AACD,GAd2E,CAe5E;;;AACA,MAAI,OAAOZ,GAAG,CAACO,KAAX,KAAqB,QAArB,IAAiC,CAACM,MAAM,CAACC,QAAP,CAAgBd,GAAG,CAACO,KAApB,CAAtC,EAAkE;AAChE,WAAOP,GAAG,CAACO,KAAJ,CAAUK,QAAV,EAAP;AACD;;AACD,SAAOZ,GAAG,CAACO,KAAX;AACD;;AArBDQ;;AAuBA,SAAgBC,qBAAhB,CACEC,QADF,EAEEC,IAFF,EAEwC;AAEtC,MAAIA,IAAI,KAAK,IAAb,EAAmB;AACjB,WAAO;AACLX,WAAK,EAAE;AADF,KAAP;AAGD;;AACD,MAAIU,QAAQ,KAAK,6BAAjB,EAAgD;AAC9C,QAAI,OAAOC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,YAAM,IAAIC,KAAJ,CACJ,gGAAgG,OAAOD,IAAI,EADvG,CAAN;AAGD;;AACD,WAAO;AACLX,WAAK,EAAE,iCAAoBW,IAApB;AADF,KAAP;AAGD;;AACD,SAAO;AACLX,SAAK,EAAEW;AADF,GAAP;AAGD;;AAtBDH","names":["wrapperToProto3JSON","obj","Object","prototype","hasOwnProperty","call","Buffer","isBuffer","value","Uint8Array","assert","constructor","name","toString","Number","isFinite","exports","wrapperFromProto3JSON","typeName","json","Error"],"sources":["../../typescript/src/wrappers.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}