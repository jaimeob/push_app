{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.teenyRequest = exports.RequestError = void 0;\n\nconst node_fetch_1 = require(\"node-fetch\");\n\nconst stream_1 = require(\"stream\");\n\nconst uuid = require(\"uuid\");\n\nconst agents_1 = require(\"./agents\");\n\nconst TeenyStatistics_1 = require(\"./TeenyStatistics\"); // eslint-disable-next-line @typescript-eslint/no-var-requires\n\n\nconst streamEvents = require('stream-events');\n\nclass RequestError extends Error {}\n\nexports.RequestError = RequestError;\n/**\n * Convert options from Request to Fetch format\n * @private\n * @param reqOpts Request options\n */\n\nfunction requestToFetchOptions(reqOpts) {\n  const options = {\n    method: reqOpts.method || 'GET',\n    ...(reqOpts.timeout && {\n      timeout: reqOpts.timeout\n    }),\n    ...(typeof reqOpts.gzip === 'boolean' && {\n      compress: reqOpts.gzip\n    })\n  };\n\n  if (typeof reqOpts.json === 'object') {\n    // Add Content-type: application/json header\n    reqOpts.headers = reqOpts.headers || {};\n    reqOpts.headers['Content-Type'] = 'application/json'; // Set body to JSON representation of value\n\n    options.body = JSON.stringify(reqOpts.json);\n  } else {\n    if (Buffer.isBuffer(reqOpts.body)) {\n      options.body = reqOpts.body;\n    } else if (typeof reqOpts.body !== 'string') {\n      options.body = JSON.stringify(reqOpts.body);\n    } else {\n      options.body = reqOpts.body;\n    }\n  } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  options.headers = reqOpts.headers;\n  let uri = reqOpts.uri || reqOpts.url;\n\n  if (!uri) {\n    throw new Error('Missing uri or url in reqOpts.');\n  }\n\n  if (reqOpts.useQuerystring === true || typeof reqOpts.qs === 'object') {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const qs = require('querystring');\n\n    const params = qs.stringify(reqOpts.qs);\n    uri = uri + '?' + params;\n  }\n\n  options.agent = agents_1.getAgent(uri, reqOpts);\n  return {\n    uri,\n    options\n  };\n}\n/**\n * Convert a response from `fetch` to `request` format.\n * @private\n * @param opts The `request` options used to create the request.\n * @param res The Fetch response\n * @returns A `request` response object\n */\n\n\nfunction fetchToRequestResponse(opts, res) {\n  const request = {};\n  request.agent = opts.agent || false;\n  request.headers = opts.headers || {};\n  request.href = res.url; // headers need to be converted from a map to an obj\n\n  const resHeaders = {};\n  res.headers.forEach((value, key) => resHeaders[key] = value);\n  const response = Object.assign(res.body, {\n    statusCode: res.status,\n    statusMessage: res.statusText,\n    request,\n    body: res.body,\n    headers: resHeaders,\n    toJSON: () => ({\n      headers: resHeaders\n    })\n  });\n  return response;\n}\n/**\n * Create POST body from two parts as multipart/related content-type\n * @private\n * @param boundary\n * @param multipart\n */\n\n\nfunction createMultipartStream(boundary, multipart) {\n  const finale = `--${boundary}--`;\n  const stream = new stream_1.PassThrough();\n\n  for (const part of multipart) {\n    const preamble = `--${boundary}\\r\\nContent-Type: ${part['Content-Type']}\\r\\n\\r\\n`;\n    stream.write(preamble);\n\n    if (typeof part.body === 'string') {\n      stream.write(part.body);\n      stream.write('\\r\\n');\n    } else {\n      part.body.pipe(stream, {\n        end: false\n      });\n      part.body.on('end', () => {\n        stream.write('\\r\\n');\n        stream.write(finale);\n        stream.end();\n      });\n    }\n  }\n\n  return stream;\n}\n\nfunction teenyRequest(reqOpts, callback) {\n  const {\n    uri,\n    options\n  } = requestToFetchOptions(reqOpts);\n  const multipart = reqOpts.multipart;\n\n  if (reqOpts.multipart && multipart.length === 2) {\n    if (!callback) {\n      // TODO: add support for multipart uploads through streaming\n      throw new Error('Multipart without callback is not implemented.');\n    }\n\n    const boundary = uuid.v4();\n    options.headers['Content-Type'] = `multipart/related; boundary=${boundary}`;\n    options.body = createMultipartStream(boundary, multipart); // Multipart upload\n\n    teenyRequest.stats.requestStarting();\n    node_fetch_1.default(uri, options).then(res => {\n      teenyRequest.stats.requestFinished();\n      const header = res.headers.get('content-type');\n      const response = fetchToRequestResponse(options, res);\n      const body = response.body;\n\n      if (header === 'application/json' || header === 'application/json; charset=utf-8') {\n        res.json().then(json => {\n          response.body = json;\n          callback(null, response, json);\n        }, err => {\n          callback(err, response, body);\n        });\n        return;\n      }\n\n      res.text().then(text => {\n        response.body = text;\n        callback(null, response, text);\n      }, err => {\n        callback(err, response, body);\n      });\n    }, err => {\n      teenyRequest.stats.requestFinished();\n      callback(err, null, null);\n    });\n    return;\n  }\n\n  if (callback === undefined) {\n    // Stream mode\n    const requestStream = streamEvents(new stream_1.PassThrough()); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    let responseStream;\n    requestStream.once('reading', () => {\n      if (responseStream) {\n        responseStream.pipe(requestStream);\n      } else {\n        requestStream.once('response', () => {\n          responseStream.pipe(requestStream);\n        });\n      }\n    });\n    options.compress = false;\n    teenyRequest.stats.requestStarting();\n    node_fetch_1.default(uri, options).then(res => {\n      teenyRequest.stats.requestFinished();\n      responseStream = res.body;\n      responseStream.on('error', err => {\n        requestStream.emit('error', err);\n      });\n      const response = fetchToRequestResponse(options, res);\n      requestStream.emit('response', response);\n    }, err => {\n      teenyRequest.stats.requestFinished();\n      requestStream.emit('error', err);\n    }); // fetch doesn't supply the raw HTTP stream, instead it\n    // returns a PassThrough piped from the HTTP response\n    // stream.\n\n    return requestStream;\n  } // GET or POST with callback\n\n\n  teenyRequest.stats.requestStarting();\n  node_fetch_1.default(uri, options).then(res => {\n    teenyRequest.stats.requestFinished();\n    const header = res.headers.get('content-type');\n    const response = fetchToRequestResponse(options, res);\n    const body = response.body;\n\n    if (header === 'application/json' || header === 'application/json; charset=utf-8') {\n      if (response.statusCode === 204) {\n        // Probably a DELETE\n        callback(null, response, body);\n        return;\n      }\n\n      res.json().then(json => {\n        response.body = json;\n        callback(null, response, json);\n      }, err => {\n        callback(err, response, body);\n      });\n      return;\n    }\n\n    res.text().then(text => {\n      const response = fetchToRequestResponse(options, res);\n      response.body = text;\n      callback(null, response, text);\n    }, err => {\n      callback(err, response, body);\n    });\n  }, err => {\n    teenyRequest.stats.requestFinished();\n    callback(err, null, null);\n  });\n  return;\n}\n\nexports.teenyRequest = teenyRequest;\n\nteenyRequest.defaults = defaults => {\n  return (reqOpts, callback) => {\n    const opts = { ...defaults,\n      ...reqOpts\n    };\n\n    if (callback === undefined) {\n      return teenyRequest(opts);\n    }\n\n    teenyRequest(opts, callback);\n  };\n};\n/**\n * Single instance of an interface for keeping track of things.\n */\n\n\nteenyRequest.stats = new TeenyStatistics_1.TeenyStatistics();\n\nteenyRequest.resetStats = () => {\n  teenyRequest.stats = new TeenyStatistics_1.TeenyStatistics(teenyRequest.stats.getOptions());\n};","map":{"version":3,"mappings":"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","names":["streamEvents","require","RequestError","Error","exports","requestToFetchOptions","reqOpts","options","method","timeout","gzip","compress","json","headers","body","JSON","stringify","Buffer","isBuffer","uri","url","useQuerystring","qs","params","agent","agents_1","fetchToRequestResponse","opts","res","request","href","resHeaders","forEach","value","key","response","Object","assign","statusCode","status","statusMessage","statusText","toJSON","createMultipartStream","boundary","multipart","finale","stream","stream_1","part","preamble","write","pipe","end","on","teenyRequest","callback","length","uuid","v4","stats","requestStarting","node_fetch_1","then","requestFinished","header","get","err","text","undefined","requestStream","responseStream","once","emit","defaults","TeenyStatistics_1","resetStats","getOptions"],"sources":["../../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}